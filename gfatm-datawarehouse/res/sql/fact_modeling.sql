CREATE DEFINER=`gfatmdwuser`@`localhost` PROCEDURE `fact_modeling`()
BEGIN
update person_address set address4 = 'Baldia Town' where address2 like '%Baldia%';
update person_address set address4 = 'Bin Qasim Town' where address2 like '%Qasim%';
update person_address set address4 = 'Gadap Town' where address2 like '%Gadap%';
update person_address set address4 = 'Gulberg Town' where address2 like '%Gulb%rg%';
update person_address set address4 = 'Gulshan Town' where address2 like '%Gulshan%';
update person_address set address4 = 'Jamshed Town' where address2 like '%Jamsh%d%';
update person_address set address4 = 'Kemari Town' where address2 like '%K%mari%';
update person_address set address4 = 'Korangi Town' where address2 like '%Korangi%';
update person_address set address4 = 'Landhi Town' where address2 like '%L%ndhi%';
update person_address set address4 = 'Liaquatabad Town' where address2 like '%L%q%t%bad%';
update person_address set address4 = 'Lyari Town' where address2 like '%L_ari%';
update person_address set address4 = 'Malir Town' where address2 like '%Malir%';
update person_address set address4 = 'New Karachi Town' where address2 like '%New%Karachi%';
update person_address set address4 = 'North Nazimabad Town' where address2 like '%Naz_mabad%';
update person_address set address4 = 'Orangi Town' where address2 like '%Orangi%';
update person_address set address4 = 'Saddar Town' where address2 like '%Sad_ar%';
update person_address set address4 = 'Shah Faisal Town' where address2 like '%Shah%';
update person_address set address4 = 'SITE Town' where address2 like '%SITE%';

DROP TABLE IF EXISTS fact_concept;
DROP TABLE IF EXISTS fact_encounter;
DROP TABLE IF EXISTS fact_location;
DROP TABLE IF EXISTS fact_patient;
DROP TABLE IF EXISTS fact_user;


CREATE TABLE fact_concept SELECT c.implementation_id, (SELECT COUNT(*) FROM dim_concept WHERE implementation_id = c.implementation_id AND retired = 0) AS active, (SELECT COUNT(*) FROM dim_concept WHERE implementation_id = c.implementation_id AND data_type IN ('Numeric','Boolean','Date','Time','Datetime')) AS real_valued, (SELECT COUNT(*) FROM dim_concept WHERE implementation_id = c.implementation_id AND data_type IN ('N/A','Text')) AS open_text, (SELECT COUNT(*) FROM dim_concept WHERE implementation_id = c.implementation_id AND data_type = 'Coded') AS coded, (SELECT COUNT(DISTINCT uuid) FROM dim_concept) AS unique_concepts, COUNT(*) AS total FROM dim_concept AS c GROUP BY c.implementation_id;
CREATE TABLE fact_encounter SELECT e.implementation_id, t.datetime_id, e.encounter_type, e.location_id, SUM(IF(e.encounter_name LIKE 'FAST%', 1, 0)) AS fast_total, SUM(IF(e.encounter_name LIKE 'PET%', 1, 0)) AS pet_total, SUM(IF(e.encounter_name LIKE 'Comorbidities%', 1, 0)) AS comorbidities_total, SUM(IF(e.encounter_name LIKE 'Childhood TB%', 1, 0)) AS childhoodtb_total, SUM(IF(e.encounter_name LIKE 'PMDT%', 1, 0)) AS pmdt_total, COUNT(*) as total FROM dim_encounter AS e INNER JOIN dim_datetime AS t ON DATE(t.full_date) = DATE(e.date_entered) GROUP BY e.implementation_id, t.datetime_id, e.encounter_type, e.location_id;
CREATE TABLE fact_location SELECT l.implementation_id, t.*, COUNT(*) AS total FROM dim_location AS l INNER JOIN dim_datetime AS t ON DATE(t.full_date) = DATE(l.date_created) GROUP BY l.implementation_id, t.datetime_id;
CREATE TABLE fact_patient SELECT t.datetime_id, SUM(IF(p.gender = 'M', 1, 0)) AS male, SUM(IF(p.gender = 'F', 1, 0)) AS female, SUM(IF(p.dead = 1, 1, 0)) AS died, COUNT(*) AS total FROM dim_patient AS p INNER JOIN dim_datetime AS t ON DATE(t.full_date) = DATE(p.date_created) GROUP BY t.datetime_id;
CREATE TABLE fact_user SELECT u.implementation_id, t.datetime_id, COUNT(*) users FROM dim_user AS u INNER JOIN dim_datetime AS t ON DATE(t.full_date) = DATE(u.date_created) GROUP BY u.implementation_id, t.datetime_id;


delete from gfatm_dw.fact_fast_dsss where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));


insert into gfatm_dw.fact_fast_dsss (implementation_id,datetime_id,location_id) SELECT  e.implementation_id, t.datetime_id , e.location_id FROM dim_encounter AS e INNER JOIN dim_datetime AS t ON DATE(t.full_date) = DATE(e.date_entered) where e.encounter_name LIKE 'FAST%' and t.full_date >=(current_date()-interval 1 month) and e.location_id is not null group by e.implementation_id, t.datetime_id,e.location_id;


Update gfatm_dw.fact_fast_dsss ffd set 	total_screening =( select count(*) from gfatm_dw.dim_user_form duf inner JOIN dim_datetime AS t on t.full_date = date(duf.date_entered) where user_form_type_id=7 and  t.datetime_id=ffd.datetime_id and duf.location_id= ffd.location_id and duf.implementation_id=ffd.implementation_id and t.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
Update gfatm_dw.fact_fast_dsss ffd set 	chest_xrays =( SELECT count(*) FROM gfatm_dw.enc_cxr_screening_test_order cto inner JOIN dim_datetime AS t ON t.full_date = date(cto.date_entered) where reason_for_xray='screening' and  t.datetime_id=ffd.datetime_id and cto.location_id= ffd.location_id and cto.implementation_id=ffd.implementation_id and t.full_date >=(current_date()-interval 1 month));
Update gfatm_dw.fact_fast_dsss ffd set  Verbal_Screen_Presumptives =( SELECT count(*) FROM  gfatm_dw.enc_fast_presumptive fp inner JOIN dim_datetime AS t ON t.full_date = date(fp.date_entered) where  fp.presumptive_tb='yes' and fp.screening_type='symptom_screening' and t.datetime_id=ffd.datetime_id and fp.location_id= ffd.location_id and fp.implementation_id=ffd.implementation_id and t.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
Update gfatm_dw.fact_fast_dsss ffd set  Chest_XRay_Presumptives =( SELECT count(*) FROM gfatm_dw.enc_cxr_screening_test_result ctr inner join gfatm_dw.enc_cxr_screening_test_order cto on cto.patient_id=ctr.patient_id inner JOIN dim_datetime AS t ON t.full_date = date(cto.date_entered)  where ctr.presumptive_tb_cxr='yes' and cto.reason_for_xray='screening' and t.datetime_id=ffd.datetime_id and ctr.location_id= ffd.location_id  and ctr.implementation_id=ffd.implementation_id and t.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
Update gfatm_dw.fact_fast_dsss ffd set  Samples_Collected_Verbal_Screen_Presumptives =( SELECT count(*) FROM gfatm_dw.enc_gxp_specimen_collection fgsc inner join gfatm_dw.enc_fast_presumptive fp on fp.patient_id=fgsc.patient_id inner JOIN dim_datetime AS t ON t.full_date = date(fgsc.date_entered) where fp.presumptive_tb='yes' and fp.screening_type='symptom_screening' and t.datetime_id=ffd.datetime_id and fgsc.location_id= ffd.location_id  and fgsc.implementation_id=ffd.implementation_id and t.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
Update gfatm_dw.fact_fast_dsss ffd set  Samples_Collected_CXR_Presumptives =( SELECT count(*) FROM gfatm_dw.enc_gxp_specimen_collection fgsc inner join gfatm_dw.enc_cxr_screening_test_order cto on cto.patient_id=fgsc.patient_id inner join gfatm_dw.enc_cxr_screening_test_result ctr on ctr.patient_id=fgsc.patient_id inner JOIN dim_datetime AS t ON t.full_date = date(fgsc.date_entered) where ctr.presumptive_tb_cxr='yes' and cto.reason_for_xray='screening'and t.datetime_id=ffd.datetime_id and fgsc.location_id= ffd.location_id  and fgsc.implementation_id=ffd.implementation_id and t.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
Update gfatm_dw.fact_fast_dsss ffd set  GXP_Tests_Done =( SELECT count(*) FROM gfatm_dw.enc_genexpert_result fgt inner JOIN dim_datetime AS t ON t.full_date = date(fgt.date_entered) where t.datetime_id=ffd.datetime_id and fgt.location_id= ffd.location_id and fgt.implementation_id=ffd.implementation_id and t.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
Update gfatm_dw.fact_fast_dsss ffd set  Internal_Tests =( SELECT count(*) FROM gfatm_dw.enc_gxp_specimen_collection fgsc inner join gfatm_dw.enc_genexpert_result fgt on fgt.patient_id=fgsc.patient_id and fgt.location_id=fgsc.location_id inner JOIN dim_datetime AS t ON t.full_date = date(fgt.date_entered) where fgsc.sample_collected_from='within_site' and t.datetime_id=ffd.datetime_id and fgt.location_id= ffd.location_id  and fgt.implementation_id=ffd.implementation_id and t.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
Update gfatm_dw.fact_fast_dsss ffd set  External_Tests =( SELECT count(*) FROM gfatm_dw.enc_gxp_specimen_collection fgsc inner join gfatm_dw.enc_genexpert_result fgt on fgt.patient_id=fgsc.patient_id inner JOIN dim_datetime AS t ON t.full_date = date(fgt.date_entered) where ((fgt.location_id<>fgsc.location_id ) or (fgt.location_id=fgsc.location_id and fgsc.sample_collected_from='outside_site' )) and t.datetime_id=ffd.datetime_id and fgt.location_id= ffd.location_id and fgt.implementation_id=ffd.implementation_id and t.full_date >=(current_date()-interval 1 month));
Update gfatm_dw.fact_fast_dsss ffd set  MTBpve_Internal =( SELECT count(distinct(gxptest.patient_id)) FROM gfatm_dw.enc_gxp_specimen_collection fgsc inner join gfatm_dw.enc_genexpert_result gxptest on gxptest.patient_id=fgsc.patient_id and gxptest.location_id=fgsc.location_id inner JOIN dim_datetime AS t ON t.full_date = date(gxptest.date_entered)where gxptest.gxp_result='detected' and sample_collected_from='within_site' and t.datetime_id=ffd.datetime_id and gxptest.location_id= ffd.location_id and gxptest.implementation_id=ffd.implementation_id and t.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
Update gfatm_dw.fact_fast_dsss ffd set  MTBpve_External =( SELECT count(distinct(gxptest.patient_id)) FROM gfatm_dw.enc_gxp_specimen_collection fgsc inner join gfatm_dw.enc_genexpert_result gxptest on gxptest.patient_id=fgsc.patient_id inner JOIN dim_datetime AS t ON t.full_date = date(gxptest.date_entered) where ((gxptest.location_id<>fgsc.location_id ) or (gxptest.location_id=fgsc.location_id and fgsc.sample_collected_from='outside_site' )) and gxptest.gxp_result='detected' and t.datetime_id=ffd.datetime_id and gxptest.location_id= ffd.location_id and gxptest.implementation_id=ffd.implementation_id and t.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
Update gfatm_dw.fact_fast_dsss ffd set  MTBpve_RRpve_Internal =( SELECT count(distinct(gxptest.patient_id)) FROM gfatm_dw.enc_gxp_specimen_collection fgsc inner join gfatm_dw.enc_genexpert_result gxptest on gxptest.patient_id=fgsc.patient_id and gxptest.location_id=fgsc.location_id inner JOIN dim_datetime AS t ON t.full_date = date(gxptest.date_entered)where gxptest.rif_result='detected' and sample_collected_from='within_site' and t.datetime_id=ffd.datetime_id and gxptest.location_id= ffd.location_id and gxptest.implementation_id=ffd.implementation_id and t.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
Update gfatm_dw.fact_fast_dsss ffd set  MTBpve_RRpve_External =( SELECT count(distinct(gxptest.patient_id)) FROM gfatm_dw.enc_gxp_specimen_collection fgsc inner join gfatm_dw.enc_genexpert_result gxptest on gxptest.patient_id=fgsc.patient_id inner JOIN dim_datetime AS t ON t.full_date = date(gxptest.date_entered) where ((gxptest.location_id<>fgsc.location_id ) or (gxptest.location_id=fgsc.location_id and fgsc.sample_collected_from='outside_site' )) and gxptest.rif_result='detected' and t.datetime_id=ffd.datetime_id and gxptest.location_id= ffd.location_id and gxptest.implementation_id=ffd.implementation_id and t.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
Update gfatm_dw.fact_fast_dsss ffd set Error_No_result_Invalid =( SELECT count(distinct(gxptest.patient_id)) FROM gfatm_dw.enc_genexpert_result gxptest inner JOIN dim_datetime AS t ON t.full_date = date(gxptest.date_entered)  where (gxptest.gxp_result='error' or gxptest.gxp_result='no_result' or gxptest.gxp_result='invalid') and t.datetime_id=ffd.datetime_id and gxptest.location_id= ffd.location_id  and gxptest.implementation_id=ffd.implementation_id and t.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
Update gfatm_dw.fact_fast_dsss ffd set `Clinically_Diagnosed` =( SELECT count(*) FROM gfatm_dw.enc_fast_treatment_initiation fti inner JOIN dim_datetime AS t ON t.full_date = date(fti.date_entered) where (diagnosis_type='clinical_suspicion' or diagnosis_type='CLINICAL SUSPICION') and t.datetime_id=ffd.datetime_id and fti.location_id= ffd.location_id and fti.implementation_id=ffd.implementation_id and t.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
Update gfatm_dw.fact_fast_dsss ffd set `Initiated_on_Antibiotic` =( SELECT count(*) FROM gfatm_dw.enc_fast_treatment_initiation fti inner JOIN dim_datetime AS t ON t.full_date = date(fti.date_entered) where antibiotic='yes'  and t.datetime_id=ffd.datetime_id and fti.location_id= ffd.location_id  and fti.implementation_id=ffd.implementation_id and t.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
Update gfatm_dw.fact_fast_dsss ffd set `Initiated_on_TBTx` =( SELECT count(*) FROM gfatm_dw.enc_fast_treatment_initiation fti inner JOIN dim_datetime AS t ON t.full_date = date(fti.date_entered) where treatment_initiated='yes' and t.datetime_id=ffd.datetime_id and fti.location_id= ffd.location_id and fti.implementation_id=ffd.implementation_id and t.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));

RESET QUERY CACHE;
delete from gfatm_dw.fact_childtb_dsss where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));

insert into gfatm_dw.fact_childtb_dsss (implementation_id,datetime_id,location_id)SELECT implementation_id,datetime_id,location_id FROM gfatm_dw.fact_encounter where encounter_type in(55,58, 59, 61, 82, 70,  64, 85, 60, 81, 71,55, 62, 83, 74, 66, 87, 69, 65, 86, 73, 53, 56, 54, 72, 52, 160, 68, 57, 67, 63, 84, 51) and location_id is not null and datetime_id>=(select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month)) group by datetime_id,location_id;

Update gfatm_dw.fact_childtb_dsss fcd set Screened_nurse =( SELECT count(*) FROM gfatm_dw.enc_childhood_tb_verbal_screening ctvs inner JOIN dim_datetime AS t ON t.full_date = date(ctvs.date_entered) where t.datetime_id=fcd.datetime_id and location_id=fcd.location_id and implementation_id=fcd.implementation_id  and t.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
Update gfatm_dw.fact_childtb_dsss fcd set Presumptive_nurse =( SELECT count(*) FROM gfatm_dw.enc_childhood_tb_verbal_screening ctvs inner JOIN dim_datetime AS t ON t.full_date = date(ctvs.date_entered) where ctvs.presumptive_tb='yes' and t.datetime_id=fcd.datetime_id and location_id=fcd.location_id and implementation_id=fcd.implementation_id  and t.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
Update gfatm_dw.fact_childtb_dsss fcd set Presumptive_Case_Confirmed=( SELECT count(*) FROM gfatm_dw.enc_clinician_evaluation ctpcc inner JOIN dim_datetime AS t ON t.full_date = date(ctpcc.date_entered) where  t.datetime_id=fcd.datetime_id and location_id=fcd.location_id and implementation_id=fcd.implementation_id  and t.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
Update gfatm_dw.fact_childtb_dsss fcd set TB_Presumptive=( SELECT count(*) FROM gfatm_dw.enc_clinician_evaluation ctpcc inner JOIN dim_datetime AS t ON t.full_date = date(ctpcc.date_entered) where  ctpcc.conclusion_presumptive='tb_presumptive_confirmed' and t.datetime_id=fcd.datetime_id and location_id=fcd.location_id and implementation_id=fcd.implementation_id  and t.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
Update gfatm_dw.fact_childtb_dsss fcd set Test_indication=( SELECT count(*) FROM gfatm_dw.enc_childhood_tb_test_indication ctti inner JOIN dim_datetime AS t ON t.full_date = date(ctti.date_entered) where  t.datetime_id=fcd.datetime_id and location_id=fcd.location_id and implementation_id=fcd.implementation_id  and t.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
Update gfatm_dw.fact_childtb_dsss fcd set CBC_Indicated=( SELECT count(*) FROM gfatm_dw.enc_childhood_tb_test_indication ctti inner JOIN dim_datetime AS t ON t.full_date = date(ctti.date_entered) where ctti.refer_cbc='yes' and t.datetime_id=fcd.datetime_id and location_id=fcd.location_id and implementation_id=fcd.implementation_id  and t.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
Update gfatm_dw.fact_childtb_dsss fcd set ESR_Indicated=( SELECT count(*) FROM gfatm_dw.enc_childhood_tb_test_indication ctti inner JOIN dim_datetime AS t ON t.full_date = date(ctti.date_entered) where ctti.refer_esr='yes' and t.datetime_id=fcd.datetime_id and location_id=fcd.location_id and implementation_id=fcd.implementation_id  and t.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
Update gfatm_dw.fact_childtb_dsss fcd set CXR_Indicated=( SELECT count(*) FROM gfatm_dw.enc_childhood_tb_test_indication ctti inner JOIN dim_datetime AS t ON t.full_date = date(ctti.date_entered) where ctti.refer_cxr='yes' and t.datetime_id=fcd.datetime_id and location_id=fcd.location_id and implementation_id=fcd.implementation_id  and t.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
Update gfatm_dw.fact_childtb_dsss fcd set MT_Indicated=( SELECT count(*) FROM gfatm_dw.enc_childhood_tb_test_indication ctti inner JOIN dim_datetime AS t ON t.full_date = date(ctti.date_entered) where ctti.refer_mantoux_test='yes' and t.datetime_id=fcd.datetime_id and location_id=fcd.location_id and implementation_id=fcd.implementation_id  and t.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
Update gfatm_dw.fact_childtb_dsss fcd set Ultrasound_Indicated=( SELECT count(*) FROM gfatm_dw.enc_childhood_tb_test_indication ctti inner JOIN dim_datetime AS t ON t.full_date = date(ctti.date_entered) where ctti.refer_ultrasound='yes' and t.datetime_id=fcd.datetime_id and location_id=fcd.location_id and implementation_id=fcd.implementation_id  and t.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
Update gfatm_dw.fact_childtb_dsss fcd set HistopathologyFNAC_Indicated=( SELECT count(*) FROM gfatm_dw.enc_childhood_tb_test_indication ctti inner JOIN dim_datetime AS t ON t.full_date = date(ctti.date_entered) where ctti.refer_histopathology='yes' and t.datetime_id=fcd.datetime_id and location_id=fcd.location_id and implementation_id=fcd.implementation_id  and t.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
Update gfatm_dw.fact_childtb_dsss fcd set CT_scan_Indicated=( SELECT count(*) FROM gfatm_dw.enc_childhood_tb_test_indication ctti inner JOIN dim_datetime AS t ON t.full_date = date(ctti.date_entered) where ctti.refer_ct_scan='yes' and t.datetime_id=fcd.datetime_id and location_id=fcd.location_id and implementation_id=fcd.implementation_id  and t.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
Update gfatm_dw.fact_childtb_dsss fcd set GXP_Indicated=( SELECT count(*) FROM gfatm_dw.enc_childhood_tb_test_indication ctti inner JOIN dim_datetime AS t ON t.full_date = date(ctti.date_entered) where ctti.refer_genxpert_tb='yes' and t.datetime_id=fcd.datetime_id and location_id=fcd.location_id and implementation_id=fcd.implementation_id  and t.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
Update gfatm_dw.fact_childtb_dsss fcd set TB_Treatment_intiated=( SELECT count(*) FROM gfatm_dw.enc_childhood_tb_treatment_initiation ctti inner JOIN dim_datetime AS t ON t.full_date = date(ctti.date_entered) where ctti.treatment_initiated='yes' and t.datetime_id=fcd.datetime_id and location_id=fcd.location_id and implementation_id=fcd.implementation_id  and t.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
Update gfatm_dw.fact_childtb_dsss fcd set Antibiotic_trial_initiated=( SELECT count(*) FROM gfatm_dw.enc_childhood_tb_treatment_initiation ctti inner JOIN dim_datetime AS t ON t.full_date = date(ctti.date_entered) where ctti.antibiotic='yes' and t.datetime_id=fcd.datetime_id and location_id=fcd.location_id and implementation_id=fcd.implementation_id  and t.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
Update gfatm_dw.fact_childtb_dsss fcd set IPT_treatment_initiated=( SELECT count(*) FROM gfatm_dw.enc_childhood_tb_treatment_initiation ctti inner JOIN dim_datetime AS t ON t.full_date = date(ctti.date_entered) where ctti.ipt_start_date is not null and t.datetime_id=fcd.datetime_id and location_id=fcd.location_id and implementation_id=fcd.implementation_id  and t.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
Update gfatm_dw.fact_childtb_dsss fcd set TB_Treatment_Follow_up=( SELECT count(*) FROM gfatm_dw.enc_childhood_tb_tb_treatment_followup cttf inner JOIN dim_datetime AS t ON t.full_date = date(cttf.date_entered) where t.datetime_id=fcd.datetime_id and location_id=fcd.location_id and implementation_id=fcd.implementation_id  and t.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
Update gfatm_dw.fact_childtb_dsss fcd set Antibiotic_trial_Followup=( SELECT count(*) FROM gfatm_dw.enc_childhood_tb_antibiotic_trial_followup ctatf inner JOIN dim_datetime AS t ON t.full_date = date(ctatf.date_entered) where t.datetime_id=fcd.datetime_id and location_id=fcd.location_id and implementation_id=fcd.implementation_id  and t.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
Update gfatm_dw.fact_childtb_dsss fcd set IPT_follow_up=( SELECT count(*) FROM gfatm_dw.enc_childhood_tb_ipt_followup ctif inner JOIN dim_datetime AS t ON t.full_date = date(ctif.date_entered) where t.datetime_id=fcd.datetime_id and location_id=fcd.location_id and implementation_id=fcd.implementation_id  and t.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
Update gfatm_dw.fact_childtb_dsss fcd set End_of_followup=( SELECT count(*) FROM gfatm_dw.enc_end_of_followup cteof inner JOIN dim_datetime AS t ON t.full_date = date(cteof.date_entered) where t.datetime_id=fcd.datetime_id and location_id=fcd.location_id and implementation_id=fcd.implementation_id  and t.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));

RESET QUERY CACHE;
delete from gfatm_dw.fact_Pet_DS where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));


insert into gfatm_dw.fact_Pet_DS(datetime_id,implementation_id,location_id)(select  datetime_id, implementation_id,  location_id from gfatm_dw.fact_encounter where  encounter_type IN( 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,131,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,157,158,159) and location_id is not null and datetime_id>=(select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month)) group by  datetime_id, location_id  order by location_id ASC);

update gfatm_dw.fact_Pet_DS petds set  No_Of_Index_Patients_Registered=( select count(*) from gfatm_dw.enc_pet_index_patient_registration p inner join dim_datetime as d on d.full_date= date(p.date_entered) where d.datetime_id= petds.datetime_id and p.location_id= petds.location_id and p.implementation_id= petds.implementation_id and d.full_date>=(current_date()-interval 1 month) ) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
update gfatm_dw.fact_Pet_DS petds set  No_Of_DSTB_Patients= (select count(*) from gfatm_dw.enc_pet_index_patient_registration p inner join dim_datetime as d on d.full_date= date(p.date_entered) where tb_infection_type='DS-TB' and d.datetime_id= petds.datetime_id and p.location_id= petds.location_id and p.implementation_id= petds.implementation_id and d.full_date>=(current_date()-interval 1 month) ) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
update gfatm_dw.fact_Pet_DS petds set No_Of_DRTB_Patients= (select count(*)  from gfatm_dw.enc_pet_index_patient_registration p inner join dim_datetime as d on d.full_date= date(p.date_entered) where tb_infection_type='DR-TB'  and d.datetime_id= petds.datetime_id and p.location_id= petds.location_id and p.implementation_id= petds.implementation_id and d.full_date>=(current_date()-interval 1 month) ) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
update gfatm_dw.fact_Pet_DS petds set No_Of_Baseline_Screening=( select count(*) from gfatm_dw.enc_pet_baseline_screening b inner join dim_datetime as d on d.full_date= date(b.date_entered) where d.datetime_id= petds.datetime_id and b.location_id= petds.location_id and b.implementation_id= petds.implementation_id and d.full_date>=(current_date()-interval 1 month) ) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month)); 
update gfatm_dw.fact_Pet_DS petds set No_Of_Index_Patient_Agreed_For_Their_Contact_Screening=(SELECT count(*) FROM gfatm_dw.enc_contact_registry r inner join dim_datetime as d on d.full_date= date(r.date_entered) where consent_for_contact_investigation='yes' and  d.datetime_id= petds.datetime_id and r.location_id= petds.location_id and r.implementation_id= petds.implementation_id and d.full_date>=(current_date()-interval 1 month) ) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
update gfatm_dw.fact_Pet_DS petds set No_Of_Adult_Contacts =( select count(*) from gfatm_dw.enc_contact_registry r  inner join dim_datetime as d on d.full_date= date(r.date_entered) where   d.datetime_id= petds.datetime_id and r.location_id= petds.location_id and r.implementation_id= petds.implementation_id and d.full_date>=(current_date()-interval 1 month) ) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
update gfatm_dw.fact_Pet_DS petds set No_Of_Peads_Contacts =( select count(*) from gfatm_dw.enc_contact_registry r  inner join dim_datetime as d on d.full_date= date(r.date_entered) where   d.datetime_id= petds.datetime_id and r.location_id= petds.location_id and r.implementation_id= petds.implementation_id and d.full_date>=(current_date()-interval 1 month) ) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
update gfatm_dw.fact_Pet_DS petds set No_Of_Index_Not_Eligible_For_Study =( select count(*) from gfatm_dw.enc_end_of_followup f  inner join dim_datetime as d on d.full_date= date(f.date_entered) where treatment_outcome='not_eligible_for_program' and  d.datetime_id= petds.datetime_id and f.location_id= petds.location_id and f.implementation_id= petds.implementation_id and d.full_date>=(current_date()-interval 1 month) ) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
update gfatm_dw.fact_Pet_DS petds set No_Of_Contact_Screening_Counseling_Done= (select count(*) from gfatm_dw.enc_pet_socioeconomic_data s inner join dim_datetime as d on d.full_date= date(s.date_entered) where   d.datetime_id= petds.datetime_id and s.location_id= petds.location_id and s.implementation_id= petds.implementation_id and d.full_date>=(current_date()-interval 1 month) ) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
update gfatm_dw.fact_Pet_DS petds set No_Of_Baseline_Counceling_Done= (select count(*) from gfatm_dw.enc_pet_baseline_counselling c  inner join dim_datetime as d on d.full_date= date(c.date_entered) where   d.datetime_id= petds.datetime_id and c.location_id= petds.location_id and c.implementation_id= petds.implementation_id and d.full_date>=(current_date()-interval 1 month) ) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
update gfatm_dw.fact_Pet_DS petds set No_Of_Contacts_Investigated=(select count(*) from gfatm_dw.enc_cxr_screening_test_result tr inner join dim_datetime as d on d.full_date= date(tr.date_entered) where   d.datetime_id= petds.datetime_id and tr.location_id= petds.location_id and tr.implementation_id= petds.implementation_id and d.full_date>=(current_date()-interval 1 month) ) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
update gfatm_dw.fact_Pet_DS petds set No_Of_contacts_Diagnosed_With_TB=(select count(*) from gfatm_dw.enc_pet_infection_treatment_eligibility e inner join dim_datetime as d on d.full_date= date(e.date_entered) where tb_diagnosis='yes' and  d.datetime_id= petds.datetime_id and e.location_id= petds.location_id and e.implementation_id= petds.implementation_id and d.full_date>=(current_date()-interval 1 month) ) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
update gfatm_dw.fact_Pet_DS petds set No_Of_Contacts_Eligible_For_Pet=(Select count(*) from gfatm_dw.enc_pet_infection_treatment_eligibility e inner join dim_datetime as d on d.full_date= date(e.date_entered) where pet_eligible='yes' and  d.datetime_id= petds.datetime_id and e.location_id= petds.location_id and e.implementation_id= petds.implementation_id and d.full_date>=(current_date()-interval 1 month) ) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
update gfatm_dw.fact_Pet_DS petds set No_Of_Contacts_Agreed_For_Pet=(select count(*) from gfatm_dw.enc_pet_infection_treatment_eligibility e inner join dim_datetime as d on d.full_date= date(e.date_entered) where pet_consent='yes' and  d.datetime_id= petds.datetime_id and e.location_id= petds.location_id and e.implementation_id= petds.implementation_id and d.full_date>=(current_date()-interval 1 month) ) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
update gfatm_dw.fact_Pet_DS petds set No_Of_Contacts_Completed_Treatment=( select count(*) from gfatm_dw.enc_end_of_followup f  inner join dim_datetime as d on d.full_date= date(f.date_entered) where  treatment_outcome='treatment_complete' and d.datetime_id= petds.datetime_id and f.location_id= petds.location_id and f.implementation_id= petds.implementation_id and d.full_date>=(current_date()-interval 1 month) ) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));

RESET QUERY CACHE;
delete from gfatm_dw.fact_CHTB_Diagnose where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));



insert into gfatm_dw.fact_CHTB_Diagnose (datetime_id,implementation_id,location_id)( select  datetime_id, implementation_id,  location_id from gfatm_dw.fact_encounter where  encounter_type IN(51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,81,82,83,84,85,86,87,160) and location_id is not null and datetime_id>=(select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month)) group by  datetime_id, location_id  order by location_id ASC);


update gfatm_dw.fact_CHTB_Diagnose ctbd set Screening_Patients=( select count(*)  from gfatm_dw.enc_childhood_tb_screening_location s left join gfatm_dw.enc_childhood_tb_treatment_initiation t on t.patient_id=s.patient_id inner join  dim_datetime as d on d.full_date= date(s.date_entered) where  screening_referral='screening' and tb_patient='yes' and d.datetime_id= ctbd.datetime_id and s.location_id= ctbd.location_id and s.implementation_id= ctbd.implementation_id and d.full_date>=(current_date()-interval 1 month) ) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
update gfatm_dw.fact_CHTB_Diagnose ctbd set Referral_Patients=( Select count(*)  from gfatm_dw.enc_childhood_tb_screening_location s left join gfatm_dw.enc_childhood_tb_treatment_initiation t on s.patient_id=t.patient_id  inner join  dim_datetime as d on d.full_date= date(s.date_entered) where screening_referral='referral'and tb_patient='yes' and d.datetime_id= ctbd.datetime_id and s.location_id= ctbd.location_id and s.implementation_id= ctbd.implementation_id and d.full_date>=(current_date()-interval 1 month) ) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
update gfatm_dw.fact_CHTB_Diagnose ctbd set Tb_Patient=(Select count(*)  from gfatm_dw.enc_childhood_tb_treatment_initiation t  inner join dim_datetime as d on d.full_date= date(t.date_entered) where Tb_patient='yes' and d.datetime_id=ctbd.datetime_id and t.location_id=ctbd.location_id and t.implementation_id=ctbd.implementation_id and d.full_date>=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
update gfatm_dw.fact_CHTB_Diagnose ctbd set No_Of_Males_Less_Than_One=(select count(year(t.date_entered)- year(p.birthdate))  from gfatm_dw.enc_childhood_tb_treatment_initiation t inner join  gfatm_dw.dim_patient p on t.patient_id = p.patient_id inner join dim_datetime as d on d.full_date= date(t.date_entered) where Tb_Patient='yes' and gender='M' and (year(t.date_entered)- year(p.birthdate))<1  and d.datetime_id=ctbd.datetime_id and t.location_id=ctbd.location_id and t.implementation_id=ctbd.implementation_id and d.full_date>=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
update gfatm_dw.fact_CHTB_Diagnose ctbd set No_Of_Males_Bw_1_4 =(select count(year(t.date_entered)-year(p.birthdate))  from gfatm_dw.enc_childhood_tb_treatment_initiation t inner join gfatm_dw.dim_patient p on t.patient_id = p.patient_id inner join dim_datetime as d on d.full_date= date(t.date_entered) where Tb_Patient='yes' and gender='M' and (year(t.date_entered) -year(p.birthdate)) between 1 and 4 and d.datetime_id=ctbd.datetime_id and t.location_id= ctbd.location_id and t.implementation_id=ctbd.implementation_id and d.full_date>=(current_date()-interval 1 month) ) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
update gfatm_dw.fact_CHTB_Diagnose ctbd set No_Of_Males_Bw_5_9 =(select count(year(t.date_entered)-year(p.birthdate))  from gfatm_dw.enc_childhood_tb_treatment_initiation t inner join gfatm_dw.dim_patient p on t.patient_id =p.patient_id  inner join dim_datetime as d on d.full_date= date(t.date_entered) where Tb_Patient='yes' and gender='M' and (year(t.date_entered) -year(p.birthdate)) between 5 and 9 and d.datetime_id=ctbd.datetime_id and t.location_id= ctbd.location_id and t.implementation_id=ctbd.implementation_id and d.full_date>=(current_date()-interval 1 month) ) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
update gfatm_dw.fact_CHTB_Diagnose ctbd set No_Of_Males_Bw_10_14 =(select count(year(t.date_entered)-year(p.birthdate))  from gfatm_dw.enc_childhood_tb_treatment_initiation t inner join gfatm_dw.dim_patient p on t.patient_id = p.patient_id inner join dim_datetime as d on  d.full_date= date(t.date_entered) where Tb_Patient='yes' and gender='M' and (year(t.date_entered) -year(p.birthdate)) between 10 and 14 and d.datetime_id=ctbd.datetime_id and t.location_id= ctbd.location_id and t.implementation_id=ctbd.implementation_id and d.full_date>=(current_date()-interval 1 month) ) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
update gfatm_dw.fact_CHTB_Diagnose ctbd set No_Of_Males_Bw_15_18 =(select count(year(t.date_entered)- year(p.birthdate))  from gfatm_dw.enc_childhood_tb_treatment_initiation t inner join gfatm_dw.dim_patient p on t.patient_id = p.patient_id inner join dim_datetime as d on d.full_date= date(t.date_entered) where Tb_Patient='yes' and gender='M' and (year(t.date_entered) -year(p.birthdate)) between 15 and 18 and d.datetime_id=ctbd.datetime_id and t.location_id= ctbd.location_id and t.implementation_id=ctbd.implementation_id and d.full_date>=(current_date()-interval 1 month) ) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
update gfatm_dw.fact_CHTB_Diagnose ctbd set No_Of_Females_Less_Than_One=(select count(year(t.date_entered)- year(p.birthdate)) from gfatm_dw.enc_childhood_tb_treatment_initiation t inner join  gfatm_dw.dim_patient p on t.patient_id = p.patient_id inner join dim_datetime as d on d.full_date= date(t.date_entered) where Tb_Patient='yes' and gender='F' and (year(t.date_entered)- year(p.birthdate))<1  and d.datetime_id=ctbd.datetime_id and t.location_id=ctbd.location_id and t.implementation_id=ctbd.implementation_id and d.full_date>=(current_date()-interval 1 month) ) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
update gfatm_dw.fact_CHTB_Diagnose ctbd set No_Of_Females_Bw_1_4 = (select count(year(t.date_entered)-year(p.birthdate))  from gfatm_dw.enc_childhood_tb_treatment_initiation t inner join gfatm_dw.dim_patient p on t.patient_id = p.patient_id  inner join dim_datetime as d on d.full_date= date(t.date_entered) where Tb_Patient='yes' and gender='F' and (year(t.date_entered)- year(p.birthdate)) between 1 and 4  and d.datetime_id=ctbd.datetime_id and t.location_id=ctbd.location_id and t.implementation_id=ctbd.implementation_id and d.full_date>=(current_date()-interval 1 month) ) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
update gfatm_dw.fact_CHTB_Diagnose ctbd set No_Of_Females_Bw_5_9 =(select count(year(t.date_entered)-year(p.birthdate))  from gfatm_dw.enc_childhood_tb_treatment_initiation t inner join gfatm_dw.dim_patient p on t.patient_id = p.patient_id inner join dim_datetime as d on d.full_date= date(t.date_entered) where Tb_Patient='yes' and gender='F' and (year(t.date_entered) -year(p.birthdate)) between 5 and 9 and d.datetime_id=ctbd.datetime_id and t.location_id= ctbd.location_id and t.implementation_id=ctbd.implementation_id and d.full_date>=(current_date()-interval 1 month) ) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
update gfatm_dw.fact_CHTB_Diagnose ctbd set No_Of_Females_Bw_10_14 =(select count(year(t.date_entered)-year(p.birthdate))  from gfatm_dw.enc_childhood_tb_treatment_initiation t inner join gfatm_dw.dim_patient p on t.patient_id = p.patient_id inner join dim_datetime as d on  d.full_date= date(t.date_entered) where Tb_Patient='yes' and gender='F' and (year(t.date_entered) -year(p.birthdate)) between 10 and 14 and d.datetime_id=ctbd.datetime_id and t.location_id= ctbd.location_id and t.implementation_id=ctbd.implementation_id and d.full_date>=(current_date()-interval 1 month) ) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
update gfatm_dw.fact_CHTB_Diagnose ctbd set No_Of_Females_Bw_15_18 =(select count(year(t.date_entered)-year(p.birthdate))  from gfatm_dw.enc_childhood_tb_treatment_initiation t inner join gfatm_dw.dim_patient p on t.patient_id = p.patient_id inner join dim_datetime as d on d.full_date= date(t.date_entered) where Tb_Patient='yes' and gender='F' and (year(t.date_entered) -year(p.birthdate)) between 15 and 18 and d.datetime_id=ctbd.datetime_id and t.location_id= ctbd.location_id and t.implementation_id=ctbd.implementation_id and d.full_date>=(current_date()-interval 1 month) ) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
update gfatm_dw.fact_CHTB_Diagnose ctbd set Bacteriologically_Confirmed=(select count(*) from gfatm_dw.enc_childhood_tb_treatment_initiation t inner join dim_datetime as d on d.full_date= date(t.date_entered) where Tb_Patient='yes'  and  (diagnosis_type=('primary_tb_confirmed_bacteriologically,clinical_suspicion') or diagnosis_type=('primary_tb_confirmed_bacteriologically ')   or diagnosis_type=('clinical_suspicion,primary_tb_confirmed_bacteriologically') )and d.datetime_id= ctbd.datetime_id and t.location_id= ctbd.location_id and t.implementation_id= ctbd.implementation_id and d.full_date>=(current_date()-interval 1 month) ) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month)); 
update gfatm_dw.fact_CHTB_Diagnose ctbd set CLINICALLY_DIAGNOSED=(select count(*) from gfatm_dw.enc_childhood_tb_treatment_initiation t inner join dim_datetime as d on d.full_date= date(t.date_entered) where Tb_Patient='yes'  and  diagnosis_type='CLINICAL_SUSPICION'    and d.datetime_id= ctbd.datetime_id and t.location_id= ctbd.location_id and t.implementation_id= ctbd.implementation_id and d.full_date>=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month)); 
update gfatm_dw.fact_CHTB_Diagnose ctbd set Pulmonary_TB_Cases=(select count(*) from gfatm_dw.enc_childhood_tb_treatment_initiation t inner join dim_datetime as d on d.full_date= date(t.date_entered) where Tb_Patient='yes'  and tb_type='pulmonary_tb'    and d.datetime_id= ctbd.datetime_id and t.location_id= ctbd.location_id and t.implementation_id= ctbd.implementation_id and d.full_date>=(current_date()-interval 1 month) ) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month)); 
update gfatm_dw.fact_CHTB_Diagnose ctbd set EPTB_Cases=(select count(*) from gfatm_dw.enc_childhood_tb_treatment_initiation t inner join dim_datetime as d on d.full_date= date(t.date_entered) where Tb_Patient='yes'  and tb_type='extrapulmonary_tb'     and d.datetime_id= ctbd.datetime_id and t.location_id= ctbd.location_id and t.implementation_id= ctbd.implementation_id and d.full_date>=(current_date()-interval 1 month) ) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month)); 
update gfatm_dw.fact_CHTB_Diagnose ctbd set Pulmonary_And_EPTB_Cases=(select count(*) from gfatm_dw.enc_childhood_tb_treatment_initiation t inner join dim_datetime as d on d.full_date= date(t.date_entered) where Tb_Patient='yes'  and (tb_type='extrapulmonary_tb,pulmonary_tb' or tb_type='pulmonary_tb,extrapulmonary_tb')  and d.datetime_id= ctbd.datetime_id and t.location_id= ctbd.location_id and t.implementation_id= ctbd.implementation_id and d.full_date>=(current_date()-interval 1 month) ) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month)); 
update gfatm_dw.fact_CHTB_Diagnose ctbd set New_Patients=(select count(*) from gfatm_dw.enc_childhood_tb_treatment_initiation t inner join dim_datetime as d on d.full_date= date(t.date_entered) where Tb_Patient='yes'  and patient_type='NEW'  and d.datetime_id= ctbd.datetime_id and t.location_id= ctbd.location_id and t.implementation_id= ctbd.implementation_id and d.full_date>=(current_date()-interval 1 month) ) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month)); 
update gfatm_dw.fact_CHTB_Diagnose ctbd set Relapse_Patients=(select count(*) from gfatm_dw.enc_childhood_tb_treatment_initiation t inner join dim_datetime as d on d.full_date= date(t.date_entered) where Tb_Patient='yes'  and patient_type = 'RELAPSE'  and d.datetime_id= ctbd.datetime_id and t.location_id= ctbd.location_id and t.implementation_id= ctbd.implementation_id and d.full_date>=(current_date()-interval 1 month) ) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month)); 
update gfatm_dw.fact_CHTB_Diagnose ctbd set Referred_OR_Transferred_In_Patients=(select count(*) from gfatm_dw.enc_childhood_tb_treatment_initiation t inner join dim_datetime as d on d.full_date= date(t.date_entered) where Tb_Patient='yes'  and (patient_type="Referral" or patient_type= "TRANSF'D" ) and d.datetime_id= ctbd.datetime_id and t.location_id= ctbd.location_id and t.implementation_id= ctbd.implementation_id and d.full_date>=(current_date()-interval 1 month) ) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month)); 
update gfatm_dw.fact_CHTB_Diagnose ctbd set Tx_After_LTF_Patients=(select count(*) from gfatm_dw.enc_childhood_tb_treatment_initiation t inner join dim_datetime as d on d.full_date= date(t.date_entered) where Tb_Patient='yes'  and patient_type='DEFAULT' and d.datetime_id= ctbd.datetime_id and t.location_id= ctbd.location_id and t.implementation_id= ctbd.implementation_id and d.full_date>=(current_date()-interval 1 month) ) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month)); 
update gfatm_dw.fact_CHTB_Diagnose ctbd set Tx_After_Failure_Patients=(select count(*) from gfatm_dw.enc_childhood_tb_treatment_initiation t inner join dim_datetime as d on d.full_date= date(t.date_entered) where Tb_Patient='yes'  and patient_type= 'TREATMENT FAILURE' and d.datetime_id= ctbd.datetime_id and t.location_id= ctbd.location_id and t.implementation_id= ctbd.implementation_id and d.full_date>=(current_date()-interval 1 month) ) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month)); 
update gfatm_dw.fact_CHTB_Diagnose ctbd set Category_I=(select count(*) from gfatm_dw.enc_childhood_tb_treatment_initiation t inner join dim_datetime as d on d.full_date= date(t.date_entered) where Tb_Patient='yes'  and tb_category='cat_1' and d.datetime_id= ctbd.datetime_id and t.location_id= ctbd.location_id and t.implementation_id= ctbd.implementation_id and d.full_date>=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month)); 
update gfatm_dw.fact_CHTB_Diagnose ctbd set Category_II=(select count(*) from gfatm_dw.enc_childhood_tb_treatment_initiation t inner join dim_datetime as d on d.full_date= date(t.date_entered) where Tb_Patient='yes'  and tb_category= 'cat_2_tb'   and d.datetime_id= ctbd.datetime_id and t.location_id= ctbd.location_id and t.implementation_id= ctbd.implementation_id and d.full_date>=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month)); 
update gfatm_dw.fact_CHTB_Diagnose ctbd set Category_III=(select count(*) from gfatm_dw.enc_childhood_tb_treatment_initiation t inner join dim_datetime as d on d.full_date= date(t.date_entered) where Tb_Patient='yes'  and tb_category= 'cat_3_tb'   and d.datetime_id= ctbd.datetime_id and t.location_id= ctbd.location_id and t.implementation_id= ctbd.implementation_id and d.full_date>=(current_date()-interval 1 month) ) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month)); 
update gfatm_dw.fact_CHTB_Diagnose ctbd set Treatment_Initiated=(select count(*) from gfatm_dw.enc_childhood_tb_treatment_initiation t inner join dim_datetime as d on d.full_date= date(t.date_entered) where Tb_Patient='yes'  and treatment_initiated='yes'   and d.datetime_id= ctbd.datetime_id and t.location_id= ctbd.location_id and t.implementation_id= ctbd.implementation_id and d.full_date>=(current_date()-interval 1 month) ) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month)); 
update gfatm_dw.fact_CHTB_Diagnose ctbd set Treatment_Not_Initiated=(select count(*) from gfatm_dw.enc_childhood_tb_treatment_initiation t inner join dim_datetime as d on d.full_date= date(t.date_entered) where Tb_Patient='yes'  and treatment_initiated= 'no'   and d.datetime_id= ctbd.datetime_id and t.location_id= ctbd.location_id and t.implementation_id= ctbd.implementation_id and d.full_date>=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month)); 
update gfatm_dw.fact_CHTB_Diagnose ctbd set Cured=(select count(*) from gfatm_dw.enc_end_of_followup f left join gfatm_dw.enc_childhood_tb_treatment_initiation t on t.patient_id= f.patient_id inner join dim_datetime as d on d.full_date= date(f.date_entered) where Tb_Patient='yes'  and treatment_outcome='CURE'   and d.datetime_id= ctbd.datetime_id and f.location_id= ctbd.location_id and f.implementation_id= ctbd.implementation_id and d.full_date>=(current_date()-interval 1 month) ) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month)); 
update gfatm_dw.fact_CHTB_Diagnose ctbd set Treatment_Completed=(select count(*) from gfatm_dw.enc_end_of_followup f left join gfatm_dw.enc_childhood_tb_treatment_initiation t on t.patient_id= f.patient_id inner join dim_datetime as d on d.full_date= date(f.date_entered) where Tb_Patient='yes'  and treatment_outcome='treatment_complete'   and d.datetime_id= ctbd.datetime_id and ctbd.location_id= f.location_id and f.implementation_id= ctbd.implementation_id and d.full_date>=(current_date()-interval 1 month) ) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month)); 
update gfatm_dw.fact_CHTB_Diagnose ctbd set Treatment_Failure=(select count(*) from gfatm_dw.enc_end_of_followup f left join gfatm_dw.enc_childhood_tb_treatment_initiation t on t.patient_id= f.patient_id inner join  dim_datetime as d on d.full_date= date(f.date_entered) where Tb_Patient='yes'  and treatment_outcome='treatment_failure'   and d.datetime_id= ctbd.datetime_id and ctbd.location_id= f.location_id and f.implementation_id= ctbd.implementation_id and d.full_date>=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month)); 
update gfatm_dw.fact_CHTB_Diagnose ctbd set Died=(select count(*) from gfatm_dw.enc_end_of_followup f left join gfatm_dw.enc_childhood_tb_treatment_initiation t on t.patient_id= f.patient_id  inner join dim_datetime as d on d.full_date= date(f.date_entered) where Tb_Patient='yes'  and treatment_outcome='Died'   and d.datetime_id= ctbd.datetime_id and ctbd.location_id= f.location_id and f.implementation_id= ctbd.implementation_id and d.full_date>=(current_date()-interval 1 month) ) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month)); 
update gfatm_dw.fact_CHTB_Diagnose ctbd set Transfer_Out=(select count(*) from gfatm_dw.enc_end_of_followup f left join gfatm_dw.enc_childhood_tb_treatment_initiation t on t.patient_id= f.patient_id inner join dim_datetime as d on d.full_date= date(f.date_entered) where Tb_Patient='yes'  and treatment_outcome='transferred_out'  and d.datetime_id= ctbd.datetime_id and ctbd.location_id= f.location_id and f.implementation_id= ctbd.implementation_id and d.full_date>=(current_date()-interval 1 month) ) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month)); 
update gfatm_dw.fact_CHTB_Diagnose ctbd set Referral=(select count(*) from gfatm_dw.enc_end_of_followup f left join gfatm_dw.enc_childhood_tb_treatment_initiation t on t.patient_id= f.patient_id inner join dim_datetime as d on d.full_date= date(f.date_entered) where Tb_Patient='yes'  and treatment_outcome='Referral'  and d.datetime_id= ctbd.datetime_id and ctbd.location_id= f.location_id and f.implementation_id= ctbd.implementation_id and d.full_date>=(current_date()-interval 1 month) ) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month)); 
update gfatm_dw.fact_CHTB_Diagnose ctbd set Lost_To_FollowUp=(select count(*)  from gfatm_dw.enc_end_of_followup   f left join gfatm_dw.enc_childhood_tb_treatment_initiation t on t.patient_id= f.patient_id inner join dim_datetime as d on d.full_date= date(f.date_entered)   where Tb_Patient='yes'  and treatment_outcome='DEFAULT'  and d.datetime_id= ctbd.datetime_id and ctbd.location_id= f.location_id and f.implementation_id= ctbd.implementation_id and d.full_date>=(current_date()-interval 1 month) ) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month)); 

RESET QUERY CACHE;
delete from gfatm_dw.fact_gxp_sum where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));



insert into fact_gxp_sum (implementation_id,datetime_id,location_id) SELECT e.implementation_id,t.datetime_id, e.location_id FROM gfatm_dw.enc_genexpert_result e INNER JOIN dim_datetime AS t ON DATE(t.full_date) = DATE(e.date_entered) and t.full_date >=(current_date()-interval 1 month) GROUP BY e.implementation_id, t.datetime_id, e.location_id;


Update gfatm_dw.fact_gxp_sum fgs set 	GXAlert_gxpResults =( SELECT count(*) FROM gfatm_dw.enc_genexpert_result enc inner JOIN dim_datetime AS t ON t.full_date = date(enc.date_entered) where   t.datetime_id=fgs.datetime_id and enc.location_id= fgs.location_id and enc.implementation_id=fgs.implementation_id and gxp_module_id is not null and t.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
Update gfatm_dw.fact_gxp_sum fgs set 	GXAlert_gxpResults_MTBpve_RRnve =(select count(*) from gfatm_dw.enc_genexpert_result egr  inner JOIN dim_datetime AS t ON t.full_date = date(egr.date_entered) where t.datetime_id=fgs.datetime_id and egr.location_id= fgs.location_id and egr.implementation_id=fgs.implementation_id and egr.gxp_result='detected' and egr.rif_result='not_detected' and egr.gxp_module_id is not null and t.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
Update gfatm_dw.fact_gxp_sum fgs set 	GXAlert_gxpResults_MTBpve_RRpve =( select count(*) from gfatm_dw.enc_genexpert_result egr  inner JOIN dim_datetime AS t ON t.full_date = date(egr.date_entered) where t.datetime_id=fgs.datetime_id and egr.location_id= fgs.location_id and egr.implementation_id=fgs.implementation_id and egr.gxp_result='detected' and egr.rif_result='detected' and egr.gxp_module_id is not null and t.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
Update gfatm_dw.fact_gxp_sum fgs set 	GXAlert_gxpResults_MTBpve_RRind =(select count(*) from gfatm_dw.enc_genexpert_result egr  inner JOIN dim_datetime AS t ON t.full_date = date(egr.date_entered) where t.datetime_id=fgs.datetime_id and egr.location_id= fgs.location_id and egr.implementation_id=fgs.implementation_id and egr.gxp_result='detected' and egr.rif_result='indeterminate' and egr.gxp_module_id is not null and t.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
Update gfatm_dw.fact_gxp_sum fgs set 	GXAlert_gxpResults_MTBnve =(select count(*) from gfatm_dw.enc_genexpert_result egr  inner JOIN dim_datetime AS t ON t.full_date = date(egr.date_entered) where t.datetime_id=fgs.datetime_id and egr.location_id= fgs.location_id and egr.implementation_id=fgs.implementation_id and egr.gxp_result='not_detected' and egr.gxp_module_id is not null  and t.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));   
Update gfatm_dw.fact_gxp_sum fgs set 	GXAlert_gxpResults_Error =(select count(*) from gfatm_dw.enc_genexpert_result egr  inner JOIN dim_datetime AS t ON t.full_date = date(egr.date_entered) where t.datetime_id=fgs.datetime_id and egr.location_id= fgs.location_id and egr.implementation_id=fgs.implementation_id and egr.gxp_result='error' and egr.gxp_module_id is not null  and t.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));     
Update gfatm_dw.fact_gxp_sum fgs set 	GXAlert_gxpResults_Invalid =(select count(*) from gfatm_dw.enc_genexpert_result egr  inner JOIN dim_datetime AS t ON t.full_date = date(egr.date_entered) where t.datetime_id=fgs.datetime_id and egr.location_id= fgs.location_id and egr.implementation_id=fgs.implementation_id and egr.gxp_result='invalid' and egr.gxp_module_id is not null   and t.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));   
Update gfatm_dw.fact_gxp_sum fgs set 	GXAlert_gxpResults_No_Result =(select count(*) from gfatm_dw.enc_genexpert_result egr  inner JOIN dim_datetime AS t ON t.full_date = date(egr.date_entered) where t.datetime_id=fgs.datetime_id and egr.location_id= fgs.location_id and egr.implementation_id=fgs.implementation_id and egr.gxp_result='no_result' and egr.gxp_module_id is not null  and t.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));  
Update gfatm_dw.fact_gxp_sum fgs set 	Manual_gxpResults =( SELECT count(*) FROM gfatm_dw.enc_genexpert_result enc inner JOIN dim_datetime AS t ON t.full_date = date(enc.date_entered) where   t.datetime_id=fgs.datetime_id and enc.location_id= fgs.location_id and enc.implementation_id=fgs.implementation_id and gxp_module_id is null and t.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
Update gfatm_dw.fact_gxp_sum fgs set 	Manual_gxpResults_Accepted =(select count(*) from gfatm_dw.enc_genexpert_result egr  inner JOIN dim_datetime AS t ON t.full_date = date(egr.date_entered) where t.datetime_id=fgs.datetime_id and egr.location_id= fgs.location_id and egr.implementation_id=fgs.implementation_id and egr.specimen_accepted='accepted' and egr.gxp_module_id is  null and t.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month)); 
Update gfatm_dw.fact_gxp_sum fgs set 	Manual_gxpResults_Rejected =(select count(*) from gfatm_dw.enc_genexpert_result egr  inner JOIN dim_datetime AS t ON t.full_date = date(egr.date_entered) where t.datetime_id=fgs.datetime_id and egr.location_id= fgs.location_id and egr.implementation_id=fgs.implementation_id and egr.specimen_accepted='rejected' and egr.gxp_module_id is  null and t.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month)); 
Update gfatm_dw.fact_gxp_sum fgs set 	Manual_gxpResults_MTBpve_RRnve =(select count(*) from gfatm_dw.enc_genexpert_result egr  inner JOIN dim_datetime AS t ON t.full_date = date(egr.date_entered) where t.datetime_id=fgs.datetime_id and egr.location_id= fgs.location_id and egr.implementation_id=fgs.implementation_id and egr.gxp_result='detected' and egr.rif_result='not_detected' and egr.gxp_module_id is  null and t.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
Update gfatm_dw.fact_gxp_sum fgs set 	Manual_gxpResults_MTBpve_RRpve =(select count(*) from gfatm_dw.enc_genexpert_result egr  inner JOIN dim_datetime AS t ON t.full_date = date(egr.date_entered) where t.datetime_id=fgs.datetime_id and egr.location_id= fgs.location_id and egr.implementation_id=fgs.implementation_id and egr.gxp_result='detected' and egr.rif_result='detected' and egr.gxp_module_id is  null and t.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
Update gfatm_dw.fact_gxp_sum fgs set 	Manual_gxpResults_MTBpve_RRind =(select count(*) from gfatm_dw.enc_genexpert_result egr  inner JOIN dim_datetime AS t ON t.full_date = date(egr.date_entered) where t.datetime_id=fgs.datetime_id and egr.location_id= fgs.location_id and egr.implementation_id=fgs.implementation_id and egr.gxp_result='detected' and egr.rif_result='indeterminate' and egr.gxp_module_id is  null and t.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
Update gfatm_dw.fact_gxp_sum fgs set 	Manual_gxpResults_MTBnve =(select count(*) from gfatm_dw.enc_genexpert_result egr  inner JOIN dim_datetime AS t ON t.full_date = date(egr.date_entered) where t.datetime_id=fgs.datetime_id and egr.location_id= fgs.location_id and egr.implementation_id=fgs.implementation_id and egr.gxp_result='not_detected' and egr.gxp_module_id is null and t.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));   
Update gfatm_dw.fact_gxp_sum fgs set 	Manual_gxpResults_Error =(select count(*) from gfatm_dw.enc_genexpert_result egr  inner JOIN dim_datetime AS t ON t.full_date = date(egr.date_entered) where t.datetime_id=fgs.datetime_id and egr.location_id= fgs.location_id and egr.implementation_id=fgs.implementation_id and egr.gxp_result='error' and egr.gxp_module_id is null and t.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));     
Update gfatm_dw.fact_gxp_sum fgs set 	Manual_gxpResults_Invalid =(select count(*) from gfatm_dw.enc_genexpert_result egr  inner JOIN dim_datetime AS t ON t.full_date = date(egr.date_entered) where t.datetime_id=fgs.datetime_id and egr.location_id= fgs.location_id and egr.implementation_id=fgs.implementation_id and egr.gxp_result='invalid' and egr.gxp_module_id is null and t.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));   
Update gfatm_dw.fact_gxp_sum fgs set 	Manual_gxpResults_No_Result =(select count(*) from gfatm_dw.enc_genexpert_result egr  inner JOIN dim_datetime AS t ON t.full_date = date(egr.date_entered) where t.datetime_id=fgs.datetime_id and egr.location_id= fgs.location_id and egr.implementation_id=fgs.implementation_id and egr.gxp_result='no_result' and egr.gxp_module_id is null and t.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month)); 


RESET QUERY CACHE;
delete from gfatm_dw.fact_childtb_sd where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));



insert into fact_childtb_sd (implementation_id,datetime_id,location_id)SELECT implementation_id,datetime_id,location_id FROM gfatm_dw.fact_encounter where encounter_type in(61, 82, 70, 55, 64, 85, 60, 81, 71, 62, 83, 74, 58, 59, 66, 87, 69, 65, 86, 73, 53, 56, 54, 72, 52, 160, 68, 57, 67, 63, 84, 51) and location_id is not null and datetime_id>=(select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month)) group by datetime_id,location_id;

update fact_childtb_sd fcsd set symptom_screened_nurse=(select count(*) from enc_childhood_tb_verbal_screening vs_1 inner join dim_datetime dt ON dt.full_date = DATE(vs_1.date_entered) where dt.datetime_id=fcsd.datetime_id and vs_1.location_id=fcsd.location_id and vs_1.implementation_id=fcsd.implementation_id and dt.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
update fact_childtb_sd fcsd set presumptive_nurse=(select count(*) from enc_childhood_tb_verbal_screening vs_2 inner join dim_datetime dt ON dt.full_date = DATE(vs_2.date_entered) where presumptive_tb='yes' and dt.datetime_id=fcsd.datetime_id and vs_2.location_id=fcsd.location_id and vs_2.implementation_id=fcsd.implementation_id and dt.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
update fact_childtb_sd fcsd set percent_presumptive_TB_nurse=((presumptive_nurse/symptom_screened_nurse)*100) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
update fact_childtb_sd fcsd set presumptive_MO =(select count(*) from enc_clinician_evaluation pcc inner join dim_datetime dt ON dt.full_date = DATE(pcc.date_entered) where conclusion_presumptive='tb_presumptive_confirmed' and dt.datetime_id=fcsd.datetime_id and pcc.location_id=fcsd.location_id and pcc.implementation_id=fcsd.implementation_id and dt.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
update fact_childtb_sd fcsd set percent_presumptive_MO=((presumptive_MO/presumptive_nurse)*100) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
update fact_childtb_sd fcsd set diagnosed_patients=(select count(*) from enc_childhood_tb_treatment_initiation ti_1 inner join dim_datetime dt ON dt.full_date = DATE(ti_1.date_entered) where tb_patient='yes' and dt.datetime_id=fcsd.datetime_id and ti_1.location_id=fcsd.location_id and ti_1.implementation_id=fcsd.implementation_id and dt.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
update fact_childtb_sd fcsd set percent_diagnosed_patients=((diagnosed_patients/presumptive_MO)*100) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
update fact_childtb_sd fcsd set treatment_started=(select count(*) from enc_childhood_tb_treatment_initiation ti_2 inner join dim_datetime dt ON dt.full_date = DATE(ti_2.date_entered) where treatment_initiated='yes' and dt.datetime_id=fcsd.datetime_id and ti_2.location_id=fcsd.location_id and ti_2.implementation_id=fcsd.implementation_id and dt.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
update fact_childtb_sd fcsd set percent_treatment_started=((diagnosed_patients/treatment_started)*100) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
update fact_childtb_sd fcsd set yield=(select(diagnosed_patients/presumptive_nurse)*100) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));

RESET QUERY CACHE;
delete from gfatm_dw.fact_childtb_ucab where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));


insert into fact_childtb_ucab (implementation_id,datetime_id,location_id)SELECT implementation_id,datetime_id,location_id FROM gfatm_dw.fact_encounter where encounter_type in(61, 82, 70, 55, 64, 85, 60, 81, 71, 62, 83, 74, 58, 59, 66, 87, 69, 65, 86, 73, 53, 56, 54, 72, 52, 160, 68, 57, 67, 63, 84, 51) and location_id is not null and datetime_id>=(select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month)) group by datetime_id,location_id;

update fact_childtb_ucab fcu set male_under_1=(select count(*)  from gfatm_dw.enc_childhood_tb_treatment_initiation ti inner join  gfatm_dw.dim_patient d on ti.patient_id = d.patient_id left join  gfatm_dw.enc_clinician_evaluation pcc on pcc.patient_id = ti.patient_id inner join dim_datetime dt ON dt.full_date = DATE(ti.date_entered) where  pcc.weight_percentile_group in ('<=3rd Centile','<=5th Centile') and ti.tb_patient='yes'  and d.gender='M' and (year(ti.date_entered)- year(d.birthdate))<1 and dt.datetime_id=fcu.datetime_id and ti.location_id=fcu.location_id and ti.implementation_id=fcu.implementation_id  and dt.full_date >=(current_date()-interval 1 month))where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
update fact_childtb_ucab fcu set male_1to4=(select count(*) from gfatm_dw.enc_childhood_tb_treatment_initiation ti inner join  gfatm_dw.dim_patient d on ti.patient_id = d.patient_id left join  gfatm_dw.enc_clinician_evaluation pcc on pcc.patient_id = ti.patient_id inner join dim_datetime dt ON dt.full_date = DATE(ti.date_entered) where  pcc.weight_percentile_group in ('<=3rd Centile','<=5th Centile') and ti.tb_patient='yes' and d.gender='M' and (year(ti.date_entered)- year(d.birthdate)) between 1 and 4 and dt.datetime_id=fcu.datetime_id and ti.location_id=fcu.location_id and ti.implementation_id=fcu.implementation_id  and dt.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
update fact_childtb_ucab fcu set male_5to9=(select count(*) from gfatm_dw.enc_childhood_tb_treatment_initiation ti inner join  gfatm_dw.dim_patient d on ti.patient_id = d.patient_id left join  gfatm_dw.enc_clinician_evaluation pcc on pcc.patient_id = ti.patient_id inner join dim_datetime dt ON dt.full_date = DATE(ti.date_entered) where  pcc.weight_percentile_group in ('<=3rd Centile','<=5th Centile') and ti.tb_patient='yes' and d.gender='M' and (year(ti.date_entered)- year(d.birthdate)) between 5 and 9 and dt.datetime_id=fcu.datetime_id and ti.location_id=fcu.location_id and ti.implementation_id=fcu.implementation_id  and dt.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
update fact_childtb_ucab fcu set male_10to14=(select count(*) from gfatm_dw.enc_childhood_tb_treatment_initiation ti inner join  gfatm_dw.dim_patient d on ti.patient_id = d.patient_id left join  gfatm_dw.enc_clinician_evaluation pcc on pcc.patient_id = ti.patient_id inner join dim_datetime dt ON dt.full_date = DATE(ti.date_entered) where  pcc.weight_percentile_group in ('<=3rd Centile','<=5th Centile') and ti.tb_patient='yes' and d.gender='M' and (year(ti.date_entered)- year(d.birthdate)) between 10 and 14 and dt.datetime_id=fcu.datetime_id and ti.location_id=fcu.location_id and ti.implementation_id=fcu.implementation_id  and dt.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
update fact_childtb_ucab fcu set female_under_1=(select count(*)  from gfatm_dw.enc_childhood_tb_treatment_initiation ti inner join  gfatm_dw.dim_patient d on ti.patient_id = d.patient_id left join  gfatm_dw.enc_clinician_evaluation pcc on pcc.patient_id = ti.patient_id inner join dim_datetime dt ON dt.full_date = DATE(ti.date_entered) where  pcc.weight_percentile_group in ('<=3rd Centile','<=5th Centile') and ti.tb_patient='yes'  and d.gender='F' and (year(ti.date_entered)- year(d.birthdate))<1 and dt.datetime_id=fcu.datetime_id and ti.location_id=fcu.location_id and ti.implementation_id=fcu.implementation_id  and dt.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
update fact_childtb_ucab fcu set female_1to4=(select count(*) from gfatm_dw.enc_childhood_tb_treatment_initiation ti inner join  gfatm_dw.dim_patient d on ti.patient_id = d.patient_id left join  gfatm_dw.enc_clinician_evaluation pcc on pcc.patient_id = ti.patient_id inner join dim_datetime dt ON dt.full_date = DATE(ti.date_entered) where  pcc.weight_percentile_group in ('<=3rd Centile','<=5th Centile') and ti.tb_patient='yes' and d.gender='F' and (year(ti.date_entered)- year(d.birthdate)) between 1 and 4 and dt.datetime_id=fcu.datetime_id and ti.location_id=fcu.location_id and ti.implementation_id=fcu.implementation_id  and dt.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
update fact_childtb_ucab fcu set female_5to9=(select count(*) from gfatm_dw.enc_childhood_tb_treatment_initiation ti inner join  gfatm_dw.dim_patient d on ti.patient_id = d.patient_id left join  gfatm_dw.enc_clinician_evaluation pcc on pcc.patient_id = ti.patient_id inner join dim_datetime dt ON dt.full_date = DATE(ti.date_entered) where  pcc.weight_percentile_group in ('<=3rd Centile','<=5th Centile') and ti.tb_patient='yes' and d.gender='F' and (year(ti.date_entered)- year(d.birthdate)) between 5 and 9 and dt.datetime_id=fcu.datetime_id and ti.location_id=fcu.location_id and ti.implementation_id=fcu.implementation_id  and dt.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
update fact_childtb_ucab fcu set female_10to14=(select count(*) from gfatm_dw.enc_childhood_tb_treatment_initiation ti inner join  gfatm_dw.dim_patient d on ti.patient_id = d.patient_id left join  gfatm_dw.enc_clinician_evaluation pcc on pcc.patient_id = ti.patient_id inner join dim_datetime dt ON dt.full_date = DATE(ti.date_entered) where  pcc.weight_percentile_group in ('<=3rd Centile','<=5th Centile') and ti.tb_patient='yes' and d.gender='F' and (year(ti.date_entered)- year(d.birthdate)) between 10 and 14 and dt.datetime_id=fcu.datetime_id and ti.location_id=fcu.location_id and ti.implementation_id=fcu.implementation_id  and dt.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));

RESET QUERY CACHE;
delete from gfatm_dw.fact_comorb_mhfup_dw where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));


insert into gfatm_dw.fact_comorb_mhfup_dw (datetime_id,implementation_id,location_id)(select  datetime_id, implementation_id,  location_id from gfatm_dw.fact_encounter  where  encounter_type IN(48,36,77,34,155,40,75,44,46,45,43,38,50,49,35,76,41,79,16,156,33,47,39,78,42,80,37) and datetime_id>=(select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month)) group by  datetime_id, location_id  order by location_id ASC);

update gfatm_dw.fact_comorb_mhfup_dw  mhfup set Number_Of_Anticipated_Visits=((select count(*) from gfatm_dw.enc_comorbidities_mental_health_screening s left join gfatm_dw.enc_comorbidities_treatment_followup_mental_health f on s.patient_id=f.patient_id inner join  dim_datetime as d on d.full_date= date(s.return_visit_date) where f.patient_id is null and s.date_entered=(select max(date_entered) from  gfatm_dw.enc_comorbidities_mental_health_screening where patient_id=s.patient_id) and  d.datetime_id= mhfup.datetime_id and s.location_id= mhfup.location_id and s.implementation_id= mhfup.implementation_id and d.full_date >= (current_date()-interval 1 month)) + (select count(*) from gfatm_dw.enc_comorbidities_treatment_followup_mental_health f inner join  dim_datetime as d on d.full_date= date(f.return_visit_date) where f.date_entered=(select max(date_entered)  from  gfatm_dw.enc_comorbidities_treatment_followup_mental_health where patient_id=f.patient_id) and  d.datetime_id= mhfup.datetime_id and f.location_id= mhfup.location_id and f.implementation_id= mhfup.implementation_id and d.full_date >= (current_date()-interval 1 month)) ) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));  
update gfatm_dw.fact_comorb_mhfup_dw  mhfup set Number_Of_Visits_Done= (select count(*) from gfatm_dw.enc_comorbidities_treatment_followup_mental_health f inner join   dim_datetime as d on d.full_date= date(f.date_entered) where d.datetime_id= mhfup.datetime_id and f.location_id= mhfup.location_id and f.implementation_id= mhfup.implementation_id and d.full_date >= (current_date()-interval 1 month))  where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
update gfatm_dw.fact_comorb_mhfup_dw  mhfup set Number_Of_Assessment_Form_MH=(select count(*) from gfatm_dw.enc_comorbidities_assessment_form_mental_health h inner join   dim_datetime as d on d.full_date= date(h.date_entered) where d.datetime_id= mhfup.datetime_id and h.location_id= mhfup.location_id and h.implementation_id= mhfup.implementation_id and d.full_date >= (current_date()-interval 1 month))  where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month)); 
update gfatm_dw.fact_comorb_mhfup_dw  mhfup set Number_of_End_Of_Treatment_MH=(select count(*) from gfatm_dw.enc_comorbidities_end_of_treatment_mental_health t inner join dim_datetime as d on d.full_date= date(t.date_entered) where d.datetime_id=mhfup.datetime_id and t.location_id= mhfup.location_id and t.implementation_id= mhfup.implementation_id and d.full_date >= (current_date()-interval 1 month))  where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month)); 

RESET QUERY CACHE;

drop table if exists fact_mtbconfirmed;
create table fact_mtbconfirmed select gxp_sp.implementation_id,gxp_sp.location_id,gxp_sp.patient_id,gxp_sp.date_entered from enc_gxp_specimen_collection gxp_sp where gxp_sp.test_context_status='baseline' and (select count(*) from enc_gxp_specimen_collection where patient_id=gxp_sp.patient_id)=1 and (select count(*) from enc_genexpert_result where patient_id=gxp_sp.patient_id)=1;
alter table fact_mtbconfirmed add primary key (patient_id);

delete from gfatm_dw.fact_fast_mtc where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));

insert into gfatm_dw.fact_fast_mtc (implementation_id,datetime_id,location_id) SELECT  e.implementation_id, t.datetime_id , e.location_id FROM dim_encounter AS e INNER JOIN dim_datetime AS t ON DATE(t.full_date) = DATE(e.date_entered) where e.encounter_name LIKE 'FAST%' and t.full_date >=(current_date()-interval 1 month) and e.location_id is not null group by e.implementation_id, t.datetime_id,e.location_id;

Update gfatm_dw.fact_fast_mtc ffm set GXP_TESTS =(select count(*) from enc_genexpert_result gxp_res1 inner join dim_datetime dt ON dt.full_date = DATE(gxp_res1.date_entered) where dt.datetime_id=ffm.datetime_id and gxp_res1.location_id=ffm.location_id and gxp_res1.implementation_id=ffm.implementation_id and gxp_res1.specimen_accepted='accepted' and dt.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
Update gfatm_dw.fact_fast_mtc ffm set MTB_NEGATIVE =(select count(*) from enc_genexpert_result gxp_res2 inner join dim_datetime dt ON dt.full_date = DATE(gxp_res2.date_entered) where dt.datetime_id=ffm.datetime_id and gxp_res2.location_id=ffm.location_id and gxp_res2.implementation_id=ffm.implementation_id and gxp_res2.gxp_result='not_detected' and dt.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
Update gfatm_dw.fact_fast_mtc ffm set MTB_POSTIVE =(select count(*) from enc_genexpert_result gxp_res3 inner join dim_datetime dt ON dt.full_date = DATE(gxp_res3.date_entered) where dt.datetime_id=ffm.datetime_id and gxp_res3.location_id=ffm.location_id and gxp_res3.implementation_id=ffm.implementation_id and gxp_res3.gxp_result='detected' and gxp_res3.rif_result='not_detected' and dt.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
Update gfatm_dw.fact_fast_mtc ffm set MTB_POS_RIF_POS =(select count(*) from enc_genexpert_result gxp_res4 inner join dim_datetime dt ON dt.full_date = DATE(gxp_res4.date_entered) where dt.datetime_id=ffm.datetime_id and gxp_res4.location_id=ffm.location_id and gxp_res4.implementation_id=ffm.implementation_id and gxp_res4.gxp_result='detected' and gxp_res4.rif_result='detected' and dt.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
Update gfatm_dw.fact_fast_mtc ffm set MTB_POS_IND =(select count(*) from enc_genexpert_result gxp_res5 inner join dim_datetime dt ON dt.full_date = DATE(gxp_res5.date_entered) where dt.datetime_id=ffm.datetime_id and gxp_res5.location_id=ffm.location_id and gxp_res5.implementation_id=ffm.implementation_id and gxp_res5.gxp_result='detected' and gxp_res5.rif_result='indeterminate' and dt.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
Update gfatm_dw.fact_fast_mtc ffm set GXP_ERROR =(select count(*) from enc_genexpert_result gxp_res6 inner join dim_datetime dt on dt.full_date = DATE(gxp_res6.date_entered) where dt.datetime_id=ffm.datetime_id and gxp_res6.location_id=ffm.location_id and gxp_res6.implementation_id=ffm.implementation_id and gxp_res6.gxp_result='error' and dt.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
Update gfatm_dw.fact_fast_mtc ffm set INVALID =(select count(*) from enc_genexpert_result gxp_res7 inner join dim_datetime dt ON dt.full_date = DATE(gxp_res7.date_entered) where dt.datetime_id=ffm.datetime_id and gxp_res7.location_id=ffm.location_id and gxp_res7.implementation_id=ffm.implementation_id and gxp_res7.gxp_result='invalid' and dt.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
Update gfatm_dw.fact_fast_mtc ffm set NO_RESULT =(select count(*) from enc_genexpert_result gxp_res8 inner join dim_datetime dt ON dt.full_date = DATE(gxp_res8.date_entered) where dt.datetime_id=ffm.datetime_id and gxp_res8.location_id=ffm.location_id and gxp_res8.implementation_id=ffm.implementation_id and gxp_res8.gxp_result='no_result' and dt.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
Update gfatm_dw.fact_fast_mtc ffm set SUM_MTB_POS_IND =( Select (MTB_POSTIVE))+(Select (MTB_POS_IND)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
Update gfatm_dw.fact_fast_mtc ffm set External_Samples =(select count(*) from enc_gxp_specimen_collection gxp_spec inner join dim_datetime dt ON dt.full_date = DATE(gxp_spec.date_entered) where dt.datetime_id=ffm.datetime_id and gxp_spec.location_id=ffm.location_id and gxp_spec.implementation_id=ffm.implementation_id and gxp_spec.sample_collected_outside_hospital='sample_collected_outside_hospital_other' and dt.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
Update gfatm_dw.fact_fast_mtc ffm set PEADS_SAMPLE =(select count(*) from enc_gxp_specimen_collection chtb_gxp_spec inner join dim_datetime dt ON dt.full_date = DATE(chtb_gxp_spec.date_entered) where dt.datetime_id=ffm.datetime_id and chtb_gxp_spec.location_id=ffm.location_id and chtb_gxp_spec.implementation_id=ffm.implementation_id and dt.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
Update gfatm_dw.fact_fast_mtc ffm set Follow_Up_Samples =(select count(*) from enc_gxp_specimen_collection gxp_spec2 inner join enc_genexpert_result gxp_res_a on gxp_res_a.patient_id=gxp_spec2.patient_id and gxp_res_a.gxp_result='detected' and gxp_res_a.rif_result='not_detected' inner join dim_datetime dt ON dt.full_date = DATE(gxp_spec2.date_entered) where gxp_spec2.test_context_status='regular_follow_up' and dt.datetime_id=ffm.datetime_id and gxp_spec2.location_id=ffm.location_id and gxp_spec2.implementation_id=ffm.implementation_id and dt.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
Update gfatm_dw.fact_fast_mtc ffm set Duplicate_Samples =(select count(*) from enc_gxp_specimen_collection gxp_spec_aa inner join enc_genexpert_result gxp_res_aa on gxp_res_aa.patient_id=gxp_spec_aa.patient_id and gxp_res_aa.gxp_result='detected' and gxp_res_aa.rif_result='not_detected' inner join dim_datetime dt ON dt.full_date = DATE(gxp_spec_aa.date_entered) where gxp_spec_aa.test_context_status='baseline_repeat' and  dt.datetime_id=ffm.datetime_id and gxp_spec_aa.location_id=ffm.location_id and gxp_spec_aa.implementation_id=ffm.implementation_id and dt.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
Update gfatm_dw.fact_fast_mtc ffm set Re_tested_MTB_NEG =(select count(*) from enc_gxp_specimen_collection gxp_spec1 inner join dim_datetime dt ON dt.full_date = DATE(gxp_spec1.date_entered) inner join enc_genexpert_result gxp_res1 on gxp_res1.patient_id=gxp_spec1.patient_id and gxp_res1.order_id=gxp_spec1.order_id and gxp_res1.gxp_result='detected' inner JOIN enc_gxp_specimen_collection as gxp_spec2 on gxp_spec2.patient_id=gxp_spec1.patient_id and gxp_spec1.test_context_status='baseline_repeat'  and gxp_spec2.encounter_id=(SELECT encounter_id FROM enc_gxp_specimen_collection where patient_id=gxp_spec2.patient_id ORDER BY encounter_id DESC LIMIT 1, 1) inner JOIN enc_genexpert_result as gxp_res2 on gxp_res2.patient_id=gxp_spec2.patient_id and gxp_spec2.order_id = gxp_res2.order_id and gxp_res2.gxp_result='not_detected' where gxp_spec1.test_context_status='baseline' and gxp_spec1.encounter_id=(select max(encounter_id) from enc_gxp_specimen_collection where patient_id=gxp_spec1.patient_id) and dt.datetime_id=ffm.datetime_id and gxp_spec1.location_id=ffm.location_id and gxp_spec1.implementation_id=ffm.implementation_id and dt.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
Update gfatm_dw.fact_fast_mtc ffm set Confirmed_MTB_Cases =( select count(*) from fact_mtbconfirmed mtbc inner join dim_datetime dt ON dt.full_date = DATE(mtbc.date_entered) where dt.datetime_id=ffm.datetime_id and mtbc.location_id=ffm.location_id and mtbc.implementation_id=ffm.implementation_id and dt.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
Update gfatm_dw.fact_fast_mtc ffm set Verbal_Screen_MTB_POS =(select count(*) from fact_mtbconfirmed mtbc1 inner join dim_datetime dt ON dt.full_date= DATE(mtbc1.date_entered) inner join enc_fast_presumptive as presumptive on presumptive.patient_id=mtbc1.patient_id and presumptive_tb='yes' inner join enc_cxr_screening_test_result as cxr_res on cxr_res.patient_id=mtbc1.patient_id and presumptive_tb_cxr='no' where dt.datetime_id=ffm.datetime_id and mtbc1.location_id=ffm.location_id and mtbc1.implementation_id=ffm.implementation_id  and dt.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
Update gfatm_dw.fact_fast_mtc ffm set Mobile_X_Ray_MTB =(select count(*) from fact_mtbconfirmed mtbc2 inner join dim_datetime dt ON dt.full_date= DATE(mtbc2.date_entered) inner join enc_cxr_screening_test_result as cxr_res2 on cxr_res2.patient_id=mtbc2.patient_id and presumptive_tb_cxr='yes' where dt.datetime_id=ffm.datetime_id and mtbc2.location_id=ffm.location_id and mtbc2.implementation_id=ffm.implementation_id and dt.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
Update gfatm_dw.fact_fast_mtc ffm set Died =(select count(*) from enc_fast_treatment_initiation ti inner join dim_datetime dt ON dt.full_date = DATE(ti.date_entered) where ti.reason_treatment_not_initiated='died' and dt.datetime_id=ffm.datetime_id and ti.location_id=ffm.location_id and ti.implementation_id=ffm.implementation_id and dt.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
Update gfatm_dw.fact_fast_mtc ffm set Registration_Pending =(select count(*) from fact_mtbconfirmed mtbc3 inner join dim_datetime dt ON dt.full_date = DATE(mtbc3.date_entered) where mtbc3.patient_id not in (select patient_id from enc_fast_treatment_initiation) and dt.datetime_id=ffm.datetime_id and mtbc3.location_id=ffm.location_id and mtbc3.implementation_id=ffm.implementation_id and dt.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
Update gfatm_dw.fact_fast_mtc ffm set Registered_DS_TB_Cases =(select count(*) from fact_mtbconfirmed mtbc4 inner join dim_datetime dt ON dt.full_date = DATE(mtbc4.date_entered) inner join enc_fast_treatment_initiation ti2 on ti2.patient_id = mtbc4.patient_id and ti2.tb_patient='yes' and ti2.treatment_initiated='yes' where dt.datetime_id=ffm.datetime_id and mtbc4.location_id=ffm.location_id and mtbc4.implementation_id=ffm.implementation_id and dt.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
Update gfatm_dw.fact_fast_mtc ffm set Referred_Out =(select count(*) from fact_mtbconfirmed mtbc4 inner join dim_datetime dt ON dt.full_date = DATE(mtbc4.date_entered) inner join enc_referral_and_transfer_form rf on rf.patient_id = mtbc4.patient_id and rf.referral_transfer='referral' where dt.datetime_id=ffm.datetime_id and mtbc4.location_id=ffm.location_id and mtbc4.implementation_id=ffm.implementation_id and dt.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
Update gfatm_dw.fact_fast_mtc ffm set Clinical_Diagnoses_X_Ray_Van =(select count(*) from enc_fast_treatment_initiation ti2 inner join dim_datetime dt ON dt.full_date = DATE(ti2.date_entered) inner join enc_cxr_screening_test_result cxr_res2 on cxr_res2.patient_id=ti2.patient_id and cxr_res2.presumptive_tb_cxr='yes' where ti2.diagnosis_type='clinical_suspicion' and dt.datetime_id=ffm.datetime_id and ti2.location_id=ffm.location_id and ti2.implementation_id=ffm.implementation_id and dt.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
Update gfatm_dw.fact_fast_mtc ffm set RR_Outcome =(select count(*) from enc_genexpert_result gxp_res9 inner join dim_datetime dt ON dt.full_date = DATE(gxp_res9.date_entered) where dt.datetime_id=ffm.datetime_id and gxp_res9.location_id=ffm.location_id and gxp_res9.implementation_id=ffm.implementation_id and gxp_res9.gxp_result='detected' and gxp_res9.rif_result='detected' and dt.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
Update gfatm_dw.fact_fast_mtc ffm set Follow_Up_Samples_RR=(select count(*) from enc_gxp_specimen_collection gxp_spec9 inner join enc_genexpert_result gxp_res10 on gxp_res10.patient_id=gxp_spec9.patient_id and gxp_res10.gxp_result='detected' and gxp_res10.rif_result='detected' inner join dim_datetime dt ON dt.full_date = DATE(gxp_spec9.date_entered) where gxp_spec9.test_context_status='regular_follow_up' and  dt.datetime_id=ffm.datetime_id and gxp_spec9.location_id=ffm.location_id and gxp_spec9.implementation_id=ffm.implementation_id and dt.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
Update gfatm_dw.fact_fast_mtc ffm set Duplicate_Samples_RR=(select count(*) from enc_gxp_specimen_collection gxp_spec10 inner join enc_genexpert_result gxp_res11 on gxp_res11.patient_id=gxp_spec10.patient_id and gxp_res11.gxp_result='detected' and gxp_res11.rif_result='detected' inner join dim_datetime dt ON dt.full_date = DATE(gxp_spec10.date_entered) where gxp_spec10.test_context_status='baseline_repeat' and  dt.datetime_id=ffm.datetime_id and gxp_spec10.location_id=ffm.location_id and gxp_spec10.implementation_id=ffm.implementation_id and dt.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
Update gfatm_dw.fact_fast_mtc ffm set Re_tested_MTB_POS_RR_NEG=(select count(*) from enc_gxp_specimen_collection gxp_sp inner join dim_datetime dt ON dt.full_date = DATE(gxp_sp.date_entered) inner join enc_genexpert_result gxp_rs on gxp_rs.patient_id=gxp_sp.patient_id and gxp_rs.order_id=gxp_sp.order_id and gxp_rs.rif_result='detected' inner JOIN enc_gxp_specimen_collection as gxp_sp2 on gxp_sp2.patient_id=gxp_sp.patient_id and gxp_sp.test_context_status='baseline_repeat'  and gxp_sp2.encounter_id=(SELECT encounter_id FROM enc_gxp_specimen_collection where patient_id=gxp_sp2.patient_id ORDER BY encounter_id DESC LIMIT 1, 1) inner JOIN enc_genexpert_result as gxp_rs2 on gxp_rs2.patient_id=gxp_sp2.patient_id and gxp_sp2.order_id = gxp_rs2.order_id and gxp_rs2.rif_result='not_detected' where gxp_sp.test_context_status='baseline' and gxp_sp.encounter_id=(select max(encounter_id) from enc_gxp_specimen_collection where patient_id=gxp_sp.patient_id) and dt.datetime_id=ffm.datetime_id and gxp_sp.location_id=ffm.location_id and gxp_sp.implementation_id=ffm.implementation_id and dt.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
Update gfatm_dw.fact_fast_mtc ffm set Re_tested_MTB_NEG_2=(select count(*) from enc_gxp_specimen_collection gxp_sp inner join dim_datetime dt ON dt.full_date = DATE(gxp_sp.date_entered) inner join enc_genexpert_result gxp_rs on gxp_rs.patient_id=gxp_sp.patient_id and gxp_rs.order_id=gxp_sp.order_id and gxp_rs.rif_result='detected' inner JOIN enc_gxp_specimen_collection as gxp_sp2 on gxp_sp2.patient_id=gxp_sp.patient_id and gxp_sp.test_context_status='baseline_repeat'  and gxp_sp2.encounter_id=(SELECT encounter_id FROM enc_gxp_specimen_collection where patient_id=gxp_sp2.patient_id ORDER BY encounter_id DESC LIMIT 1, 1) inner JOIN enc_genexpert_result as gxp_rs2 on gxp_rs2.patient_id=gxp_sp2.patient_id and gxp_sp2.order_id = gxp_rs2.order_id and gxp_rs2.gxp_result='not_detected' where gxp_sp.test_context_status='baseline' and gxp_sp.encounter_id=(select max(encounter_id) from enc_gxp_specimen_collection where patient_id=gxp_sp.patient_id) and dt.datetime_id=ffm.datetime_id and gxp_sp.location_id=ffm.location_id and gxp_sp.implementation_id=ffm.implementation_id and dt.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
Update gfatm_dw.fact_fast_mtc ffm set Confirmed_MTB_Cases_RR=(select count(*) from enc_gxp_specimen_collection gxp_sp3 inner join dim_datetime dt ON dt.full_date = DATE(gxp_sp3.date_entered) inner join enc_genexpert_result as gxp_rs3 on gxp_rs3.patient_id=gxp_sp3.patient_id and gxp_rs3.rif_result='detected' where gxp_sp3.test_context_status='baseline' and (select count(*) from enc_gxp_specimen_collection where patient_id=gxp_sp3.patient_id)=1 and (select count(*) from enc_genexpert_result where patient_id=gxp_sp3.patient_id)=1 and dt.datetime_id=ffm.datetime_id and gxp_sp3.location_id=ffm.location_id and gxp_sp3.implementation_id=ffm.implementation_id and dt.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));

RESET QUERY CACHE;
delete from gfatm_dw.fact_chtb_ltf_antibiotic_treatment where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));


insert into gfatm_dw.fact_chtb_ltf_antibiotic_treatment (datetime_id,implementation_id,location_id)( select  datetime_id, implementation_id,  location_id from gfatm_dw.fact_encounter where  encounter_type IN(51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,81,82,83,84,85,86,87,160) and location_id is not null and datetime_id>=(select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month)) group by  datetime_id, location_id  order by location_id ASC);


update gfatm_dw.fact_chtb_ltf_antibiotic_treatment atm set Antibiotic_patients=( select count(*) from gfatm_dw.enc_childhood_tb_treatment_initiation t inner join dim_datetime  as d on d.full_date = date(t.date_entered) where tb_patient='inconclusive'  and d.datetime_id= atm.datetime_id and t.location_id= atm.location_id and t.implementation_id= atm.implementation_id and d.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
update gfatm_dw.fact_chtb_ltf_antibiotic_treatment atm set Missed_Antibiotic_Treatment=(select count(*) from gfatm_dw.enc_childhood_tb_treatment_initiation t inner join  gfatm_dw.enc_childhood_tb_treatment_initiation t1 on t.patient_id=t1.patient_id and t1.encounter_id=(select encounter_id from gfatm_dw.enc_childhood_tb_treatment_initiation where patient_id=t1.patient_id order by encounter_id limit 1,1) left join gfatm_dw.enc_end_of_followup f on t.patient_id=f.patient_id and t.date_entered=(select min(date_entered) from gfatm_dw.enc_childhood_tb_treatment_initiation where patient_id=t.patient_id) left join gfatm_dw.enc_childhood_tb_antibiotic_trial_followup a on t1.patient_id= a.patient_id and a.date_entered=(select max(date_entered) from gfatm_dw.enc_childhood_tb_antibiotic_trial_followup where patient_id=a.patient_id) inner join dim_datetime  as d on d.full_date = date(t.date_entered) where (t.tb_patient='inconclusive' ) and not(t1.tb_patient='yes') and t.antibiotic= 'yes' and (((f.patient_id is null) and (curdate()> date(t.date_entered) + interval 2 week)) and  ((f.patient_id is null) and (curdate()> date(a.date_entered) + interval 2 week) )) and d.datetime_id= atm.datetime_id and t.location_id= atm.location_id and t.implementation_id= atm.implementation_id and d.full_date >=(current_date()-interval 1 month) and t.encounter_id=(select encounter_id from gfatm_dw.enc_childhood_tb_treatment_initiation where patient_id=t.patient_id order by encounter_id limit 0,1 )) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
update gfatm_dw.fact_chtb_ltf_antibiotic_treatment atm set Percentage_Missed_Antibiotic_Treatment=(Missed_Antibiotic_Treatment/Antibiotic_patients) *100 where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
update gfatm_dw.fact_chtb_ltf_antibiotic_treatment atm set Refused_Antibiotics=(select count(*) from gfatm_dw.enc_childhood_tb_treatment_initiation t inner join dim_datetime  as d on d.full_date = date(t.date_entered) where (tb_patient='inconclusive' ) and antibiotic= 'no'  and d.datetime_id= atm.datetime_id and t.location_id= atm.location_id and t.implementation_id= atm.implementation_id  and d.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
update gfatm_dw.fact_chtb_ltf_antibiotic_treatment atm set Percentage_Refused_Antibiotics=(Refused_Antibiotics/Antibiotic_patients)*100 where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
update gfatm_dw.fact_chtb_ltf_antibiotic_treatment atm set On_Antibioitc_Treatment=( select count(*) from gfatm_dw.enc_childhood_tb_treatment_initiation t inner join dim_datetime  as d on d.full_date = date(t.date_entered) where (tb_patient='inconclusive' ) and antibiotic= 'yes' and d.datetime_id= atm.datetime_id and t.location_id= atm.location_id and t.implementation_id= atm.implementation_id  and d.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
update gfatm_dw.fact_chtb_ltf_antibiotic_treatment atm set Percentage_On_Antibioitic_Treatment=( On_Antibioitc_Treatment/Antibiotic_patients )*100 where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
update gfatm_dw.fact_chtb_ltf_antibiotic_treatment atm set End_of_Antibiotic_Treatment=(select count(*) from gfatm_dw.enc_childhood_tb_treatment_initiation t inner  join gfatm_dw.enc_end_of_followup f on t.patient_id=f.patient_id inner join dim_datetime  as d on d.full_date = date(t.date_entered) where t.tb_patient='inconclusive' and f.treatment_outcome='antibiotic_complete_no_tb' and d.datetime_id= atm.datetime_id and t.location_id= atm.location_id and t.implementation_id= atm.implementation_id  and d.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
update gfatm_dw.fact_chtb_ltf_antibiotic_treatment atm set Percentage_End_of_Antibiotic_Treatment=(End_of_Antibiotic_Treatment/Antibiotic_patients)*100 where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
update gfatm_dw.fact_chtb_ltf_antibiotic_treatment atm set TB_Diagnosed=(select count(*) from gfatm_dw.enc_childhood_tb_treatment_initiation t inner join gfatm_dw.enc_childhood_tb_treatment_initiation t1 on t.patient_id=t1.patient_id and t1.encounter_id=(select encounter_id from gfatm_dw.enc_childhood_tb_treatment_initiation where patient_id=t1.patient_id order by encounter_id limit 1,1) inner join  dim_datetime  as d on d.full_date = date(t.date_entered) where t.tb_patient='inconclusive' and t1.tb_patient='yes'  and d.datetime_id= atm.datetime_id and t.location_id= atm.location_id and t.implementation_id= atm.implementation_id  and d.full_date >=(current_date()-interval 1 month) and t.encounter_id=(select encounter_id from gfatm_dw.enc_childhood_tb_treatment_initiation where patient_id=t.patient_id order by encounter_id limit 0,1)  ) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
update gfatm_dw.fact_chtb_ltf_antibiotic_treatment atm set percentage_tb_diagnosed=(TB_Diagnosed/On_Antibioitc_Treatment)*100 where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
update gfatm_dw.fact_chtb_ltf_antibiotic_treatment atm set TB_Treatment_Initiated=( select count(*) from gfatm_dw.enc_childhood_tb_treatment_initiation t inner join gfatm_dw.enc_childhood_tb_treatment_initiation t1 on t.patient_id=t1.patient_id and t1.encounter_id=(select encounter_id from gfatm_dw.enc_childhood_tb_treatment_initiation where patient_id=t1.patient_id order by encounter_id limit 1,1) inner join  dim_datetime  as d on d.full_date = date(t.date_entered) where t.tb_patient='inconclusive' and t1.tb_patient='yes' and t1.treatment_initiated='yes' and d.datetime_id= atm.datetime_id and t.location_id= atm.location_id and t.implementation_id= atm.implementation_id and d.full_date >=(current_date()-interval 1 month) and t.encounter_id=(select encounter_id from gfatm_dw.enc_childhood_tb_treatment_initiation where patient_id=t.patient_id order by encounter_id limit 0,1)  ) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
update gfatm_dw.fact_chtb_ltf_antibiotic_treatment atm set Percentage_TB_Treatment_Initiated =(TB_Treatment_Initiated/TB_Diagnosed)*100 where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));

RESET QUERY CACHE;
delete from gfatm_dw.fact_chtb_ltf_clinical_evaluation where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));


insert into gfatm_dw.fact_chtb_ltf_clinical_evaluation (datetime_id,implementation_id,location_id)( select  datetime_id, implementation_id,  location_id from gfatm_dw.fact_encounter where  encounter_type IN(51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,81,82,83,84,85,86,87,160) and location_id is not null and datetime_id>=(select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month)) group by  datetime_id, location_id  order by location_id ASC);

update gfatm_dw.fact_chtb_ltf_clinical_evaluation ltfce set  Total_Presumptives_By_Nurse=( select count(*) from gfatm_dw.enc_childhood_tb_verbal_screening v inner join  dim_datetime as d on d.full_date = date(v.date_entered) where presumptive_tb='yes' and d.datetime_id= ltfce.datetime_id and v.location_id= ltfce.location_id and v.implementation_id= ltfce.implementation_id  and d.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month)); 
update gfatm_dw.fact_chtb_ltf_clinical_evaluation ltfce set MO_Evaluation=(select count(*) from  gfatm_dw.enc_childhood_tb_verbal_screening v inner join gfatm_dw.enc_clinician_evaluation p on p.patient_id=v.patient_id  inner join dim_datetime as d on d.full_date = date(v.date_entered) where v.presumptive_tb='yes' and d.datetime_id= ltfce.datetime_id and v.location_id= ltfce.location_id and v.implementation_id= ltfce.implementation_id  and d.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
update gfatm_dw.fact_chtb_ltf_clinical_evaluation ltfce set Percentage_MO_Evaluation=((ltfce.MO_Evaluation/ltfce.Total_Presumptives_By_Nurse)*100) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
update gfatm_dw.fact_chtb_ltf_clinical_evaluation ltfce set Presumptives_Missing_Clinical_Evaluation =( select count(*) from gfatm_dw.enc_childhood_tb_verbal_screening v left join gfatm_dw.enc_clinician_evaluation p  on v.patient_id=p.patient_id inner join  dim_datetime as d on d.full_date = date(v.date_entered) where v.presumptive_tb='yes' and p.patient_id is null and  d.datetime_id= ltfce.datetime_id and v.location_id= ltfce.location_id and v.implementation_id= ltfce.implementation_id and d.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
update gfatm_dw.fact_chtb_ltf_clinical_evaluation ltfce set  Percentage_Presumptives_Missing_Clinical_Evaluation =((Presumptives_Missing_Clinical_Evaluation/MO_Evaluation)) * 100 where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
update gfatm_dw.fact_chtb_ltf_clinical_evaluation ltfce set Tb_Presumptive_Confirmed=(select count(*) from   gfatm_dw.enc_childhood_tb_verbal_screening v inner join gfatm_dw.enc_clinician_evaluation p on p.patient_id=v.patient_id  inner join dim_datetime as d on d.full_date = date(v.date_entered) where v.presumptive_tb='yes'  and conclusion_presumptive='tb_presumptive_confirmed' and d.datetime_id= ltfce.datetime_id and v.location_id= ltfce.location_id and v.implementation_id= ltfce.implementation_id  and d.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month)); 
update gfatm_dw.fact_chtb_ltf_clinical_evaluation ltfce set Percentage_Tb_Presumptive_Confirmed=(Tb_Presumptive_Confirmed/ MO_Evaluation ) * 100 where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));
update gfatm_dw.fact_chtb_ltf_clinical_evaluation ltfce set Not_Tb_Presumptive= (select count(*) from  gfatm_dw.enc_childhood_tb_verbal_screening v inner join gfatm_dw.enc_clinician_evaluation p on p.patient_id=v.patient_id  inner join dim_datetime as d on d.full_date = date(v.date_entered) where v.presumptive_tb='yes' and child_diagnosed_presumptive_by_mo='no' and d.datetime_id= ltfce.datetime_id and v.location_id= ltfce.location_id and v.implementation_id= ltfce.implementation_id  and d.full_date >=(current_date()-interval 1 month)) where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month)); 
update gfatm_dw.fact_chtb_ltf_clinical_evaluation ltfce set Percentage_Not_Tb_Presumptive =(Not_Tb_Presumptive/MO_Evaluation)*100 where datetime_id>= (select datetime_id from dim_datetime where full_date=(current_date()-interval 1 month));

RESET QUERY CACHE;

-- common informationn from pet index registration, fast treatment initiation and childhood tb treatment initiation

drop table if exists common_form_4_29_67;
CREATE TABLE common_form_4_29_67
 SELECT `e`.`implementation_id` AS `implementation_id`, `e`.`encounter_id` AS `encounter_id`, `e`.`provider` AS `provider`, `e`.`location_id` AS `location_id`,	`l`.`location_name` AS `location_name`, `e`.`patient_id` AS `patient_id`, date(`e`.`date_entered`) AS `date_entered`, GROUP_CONCAT(IF((`o`.`question` = 'tb_infection_type'), `o`.`answer`, NULL) SEPARATOR ',') AS `tb_infection_type`, GROUP_CONCAT(IF((`o`.`question` = 'tb_type'), `o`.`answer`, NULL) SEPARATOR ',') AS `tb_type`, GROUP_CONCAT(IF((`o`.`question` = 'dst_pattern'), `o`.`answer`, NULL) SEPARATOR ',') AS `dst_pattern`, GROUP_CONCAT(IF((`o`.`question` = 'treatment_enrollment_date'), `o`.`answer`,  NULL) SEPARATOR ',') AS `treatment_enrollment_date`, GROUP_CONCAT(IF((`o`.`question` = 'district'), `o`.`answer`, NULL) SEPARATOR ',') AS `district`, GROUP_CONCAT(IF((`o`.`question` = 'address_type'), `o`.`answer`, NULL) SEPARATOR ',') AS `address_type`,  GROUP_CONCAT(IF((`o`.`question` = 'diagnosis_type'), `o`.`answer`, NULL) SEPARATOR ',') AS `diagnosis_type`, GROUP_CONCAT(IF((`o`.`question` = 'primary_contact'), `o`.`answer`, NULL) SEPARATOR ',') AS `primary_contact`, GROUP_CONCAT(IF((`o`.`question` = 'secondary_contact'), `o`.`answer`,  NULL) SEPARATOR ',') AS `secondary_contact`, GROUP_CONCAT(IF((`o`.`question` = 'address1'),  `o`.`answer`,  NULL) SEPARATOR ',') AS `address1`, GROUP_CONCAT(IF((`o`.`question` = 'city_village'),  `o`.`answer`,  NULL) SEPARATOR ',') AS `city_village`, GROUP_CONCAT(IF((`o`.`question` = 'registration_date'),   `o`.`answer`, NULL)  SEPARATOR ',') AS `registration_date`, GROUP_CONCAT(IF((`o`.`question` = 'nearest_landmark'),  `o`.`answer`, NULL) SEPARATOR ',') AS `nearest_landmark` FROM ((`dim_encounter` `e` JOIN `dim_obs` `o` ON (((`o`.`encounter_id` = `e`.`encounter_id`) AND (`o`.`voided` = 0)))) JOIN `dim_location` `l` ON ((`l`.`location_id` = `e`.`location_id`))) WHERE ((`e`.`encounter_type` IN (4 , 29, 67)) AND ISNULL(`o`.`obs_group_id`)) and e.encounter_id=(select max(encounter_id) from dim_encounter where encounter_type IN (4 , 29, 67) and patient_id=e.patient_id) GROUP BY  `e`.`implementation_id` , `e`.`encounter_id` , `e`.`patient_id` , `e`.`provider` , `e`.`location_id` , `e`.`date_entered`;
alter table common_form_4_29_67 add PRIMARY KEY (`encounter_id`), add KEY `encounter_id` (`encounter_id`), add  KEY `patient_id` (`patient_id`), add  KEY `location_id` (`location_id`), add  KEY `date_entered` (`date_entered`);

-- Dummy entry for pet baseline screening
 insert into enc_pet_baseline_screening (surrogate_id,implementation_id,provider,location_id,location_name,patient_id, date_entered,index_patient_id) select surrogate_id,implementation_id,provider,location_id,location_name,patient_id,date_entered,index_patient_id from enc_clinician_evaluation where index_patient_id is not null and patient_id not in 
 (select patient_id from enc_pet_baseline_screening );

END